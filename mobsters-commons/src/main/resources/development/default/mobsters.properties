## <!-- AMQP -->
amqp.host=robot.lvl6.com
amqp.user=lvl6server
amqp.pass=devserver
amqp.vhost=devageofchaos
amqp.exchange=servermessages


## <!-- AWS -->
aws.accessKey=FAKE
aws.secretKey=FAKE


## <!-- DynamoDB -->
aws.dynamo.checkTables=true
aws.dynamo.endpoint=http://localhost:8000
aws.dynamo.regionId=local

# JCH 8/12: I think setting a table name prefix actually breaks DynamoDB functionality...  Verify and tune as appropriate.
aws.dynamo.table.name.prefix=DEV_


## <!-- MySQL -->

# JCH 8/12: No longer exists.  
jdbc.url=jdbc:mysql://mobstersdev.cirdfrlgyccg.us-west-2.rds.amazonaws.com:3306/mobsters?useLegacyDatetimeCode=false

# JCH 8/12: Is it safe to target here?
# jdbc.url=jdbc:mysql://staging.mobsters.lvl6.com:3306/mobsters?useLegacyDatetimeCode=false

jdbc.username=lvl6admin
jdbc.password=robashen123

# JCH 8/12: Accept the defaults from root mobsters.properties unless things like "partition" and "idle" properties
#           should be scoped differently for developers.  Do we really want to open 6 connections for every development
#           test run?
# jdbc.driverClassName=com.mysql.jdbc.Driver
# jdbc.idleConnectionTestPeriodInMinutes=1
# jdbc.idleMaxAgeInMinutes=5
# jdbc.maxConnectionsPerPartition=30
# jdbc.minConnectionsPerPartition=2
# jdbc.partitionCount=3
# jdbc.acquireIncrement=2
# jdbc.statementsCacheSize=500
# jdbc.releaseHelperThreads=3


## <!-- Hibernate -->
hibernate.hbm2ddl.auto=update
 
# JCH 8/12: Accept the defaults from root mobsters.properties.
# hibernate.generate_statistics=false
# hibernate.show_sql=false
# hibernate.cache.use_second_level_cache=true
# hibernate.cache.use_query_cache=true
# hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory


## <!-- Redis/Elasticache -->
lvl6.jedis.host=robot.lvl6.com
lvl6.jedis.auth=L3v3lS!x_K!ngd0m$

# JCH 8/12: Accept the defaults from root mobsters.properties.
# lvl6.jedis.database=1