<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.lvl6</groupId>
	<artifactId>mobsters-server-aws</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Mobsters Server</name>

	<packaging>pom</packaging>

	<developers>
		<developer>
			<id>ashwin</id>
			<name>Ashwin</name>
			<email>ashwin@lvl6.com</email>
		</developer>
		<developer>
			<id>art</id>
			<name>Art</name>
			<email>art@lvl6.com</email>
		</developer>
		<developer>
			<id>kelly</id>
			<name>Kelly</name>
			<email>kelly@dekayd.com</email>
		</developer>
	</developers>
	<modules>
		<module>mobsters-data-model</module>
		<module>mobsters-functional</module>
	</modules>
	<organization>
		<name>Lvl6</name>
		<url>http://lvl6.com</url>
	</organization>
	<scm>
		<url>https://github.com/levelsix/mobsters-server-aws</url>
	</scm>
	<ciManagement>
		<system>Jenkins</system>
		<url>http://robot.lvl6.com</url>
	</ciManagement>

	<properties>
		<!-- AWS -->
		<aws.accessKey>dummyKey</aws.accessKey>
		<aws.secretKey>dummySecretKey</aws.secretKey>

		<!-- DynamoDB -->
		<aws.dynamo.endpoint>http://localhost:8000</aws.dynamo.endpoint>
		<aws.dynamo.regionId>local</aws.dynamo.regionId>
		<aws.dynamo.checkTables>true</aws.dynamo.checkTables>
		<aws.dynamo.table.name.prefix>DEV_</aws.dynamo.table.name.prefix>


		<!-- MySQL -->
		<jdbc.url><![CDATA[jdbc:mysql://mobstersdev.cirdfrlgyccg.us-west-2.rds.amazonaws.com:3306/mobsters?useLegacyDatetimeCode=false]]></jdbc.url>
		<jdbc.username>lvl6admin</jdbc.username>
		<jdbc.password>robashen123</jdbc.password>
		<jdbc.driverClassName>com.mysql.jdbc.Driver</jdbc.driverClassName>
		<jdbc.idleConnectionTestPeriodInMinutes>1</jdbc.idleConnectionTestPeriodInMinutes>
		<jdbc.idleMaxAgeInMinutes>5</jdbc.idleMaxAgeInMinutes>
		<jdbc.maxConnectionsPerPartition>30</jdbc.maxConnectionsPerPartition>
		<jdbc.minConnectionsPerPartition>2</jdbc.minConnectionsPerPartition>
		<jdbc.partitionCount>3</jdbc.partitionCount>
		<jdbc.acquireIncrement>2</jdbc.acquireIncrement>
		<jdbc.statementsCacheSize>500</jdbc.statementsCacheSize>
		<jdbc.releaseHelperThreads>3</jdbc.releaseHelperThreads>

		<!-- Hibernate -->
		<!-- Production deployment will likely want to set this to 'none'. Developers 
			content with their own schema may also wish to set 'none' in their custom 
			profile to avoid spending time in an update phase on Hibernate-dependenent 
			tests unless their changes are schema-impacting. -->
		<hibernate.hbm2ddl.auto>update</hibernate.hbm2ddl.auto>
		<!-- Developers may toggle these flags on in their local profile to get 
			more verbose output from Hibernate about session boundaries and queries evaluated. -->
		<hibernate.generate_statistics>false</hibernate.generate_statistics>
		<hibernate.show_sql>false</hibernate.show_sql>
		<hibernate.cache.use_second_level_cache>true</hibernate.cache.use_second_level_cache>
		<hibernate.cache.use_query_cache>true</hibernate.cache.use_query_cache>
		<hibernate.cache.region.factory_class>org.hibernate.cache.ehcache.EhCacheRegionFactory</hibernate.cache.region.factory_class>

		<!-- Redis/Elasticache -->
		<lvl6.jedis.host>robot.lvl6.com</lvl6.jedis.host>
		<lvl6.jedis.auth>L3v3lS!x_K!ngd0m$</lvl6.jedis.auth>
		<lvl6.jedis.database>1</lvl6.jedis.database>


		<!-- Maven Plugin Versions -->
		<maven-compiler.plugin-version>3.1</maven-compiler.plugin-version>
		<maven-surefire.plugin-version>2.15</maven-surefire.plugin-version>

		<!-- Dependencies -->
		<apns.version>0.1.6</apns.version>
		<awaitility.version>1.2.4</awaitility.version>
		<bonecp.version>0.7.1.RELEASE</bonecp.version>
		<c3p0.version>0.9.1.2</c3p0.version>
		<commons-lang.version>2.6</commons-lang.version>
		<commons-pool.version>1.5.3</commons-pool.version>
		<easymock.version>3.2</easymock.version>
		<guava.version>12.0</guava.version>
		<hibernate-entitymanager.version>4.3.5.Final</hibernate-entitymanager.version>
		<hibernate-validator.version>5.1.0.Final</hibernate-validator.version>
		<httpclient.version>4.2.1</httpclient.version>

		<javax.servlet-api.version>3.0.1</javax.servlet-api.version>
		<javax.mail.version>1.4.5</javax.mail.version>
		<javax.websocket-api.version>1.0</javax.websocket-api.version>

		<jedis.version>2.4.2</jedis.version>
		<joda-time.version>2.1</joda-time.version>
		<chill-java.version>0.3.6</chill-java.version>
		<aws-java-sdk.version>1.7.7</aws-java-sdk.version>
		<commons-beanutils.version>1.8.3</commons-beanutils.version>
		<junit.version>4.10</junit.version>
		<logback-classic.version>1.1.2</logback-classic.version>
		<mysql-connector.version>5.1.20</mysql-connector.version>
		<protobuf.version>2.4.1</protobuf.version>
		<powermock.version>1.5.4</powermock.version>
		<slf4j.version>1.6.6</slf4j.version>

		<spring.version>4.0.3.RELEASE</spring.version>
		<spring.data-jpa.version>1.6.0.RELEASE</spring.data-jpa.version>
		<spring.integration.version>3.0.2.RELEASE</spring.integration.version>
		<spring.support.version>2.0.8.RELEASE</spring.support.version>

		<tomcat.version>7.0.27</tomcat.version>
	</properties>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler.plugin-version}</version>
					<configuration>
						<source>1.7</source>
						<target>1.7</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire.plugin-version}</version>
					<configuration>
						<includes>
							<include>**/test/*.java</include>
							<include>**/Test*.java</include>
							<include>**/E2ETest*.java</include>
						</includes>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<dependencyManagement>
		<dependencies>

			<!-- Lvl6 -->
			<dependency>
				<groupId>com.lvl6</groupId>
				<artifactId>mobsters-cache</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.lvl6</groupId>
				<artifactId>mobsters-sql</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.lvl6</groupId>
				<artifactId>mobsters-dynamo</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.lvl6</groupId>
				<artifactId>mobsters-proto</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.lvl6</groupId>
				<artifactId>mobsters-test-data</artifactId>
				<version>0.0.1-SNAPSHOT</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.lvl6</groupId>
				<artifactId>mobsters-api-events</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.lvl6</groupId>
				<artifactId>mobsters-services</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.lvl6</groupId>
				<artifactId>mobsters-controllers</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>
			<!-- /Lvl6 -->

			<!-- Third Party -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql-connector.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.protobuf</groupId>
				<artifactId>protobuf-java</artifactId>
				<version>${protobuf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback-classic.version}</version>
			</dependency>
			<dependency>
				<groupId>c3p0</groupId>
				<artifactId>c3p0</artifactId>
				<version>${c3p0.version}</version>
			</dependency>
			<dependency>
				<groupId>com.jolbox</groupId>
				<artifactId>bonecp</artifactId>
				<version>${bonecp.version}</version>
			</dependency>
			<dependency>
				<groupId>com.notnoop.apns</groupId>
				<artifactId>apns</artifactId>
				<version>${apns.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-servlet-api</artifactId>
				<version>${tomcat.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-websocket</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.integration</groupId>
				<artifactId>spring-integration-core</artifactId>
				<version>${spring.integration.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.integration</groupId>
				<artifactId>spring-integration-ip</artifactId>
				<version>${spring.integration.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>${commons-lang.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-pool</groupId>
				<artifactId>commons-pool</artifactId>
				<version>${commons-pool.version}</version>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${javax.servlet-api.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${httpclient.version}</version>
			</dependency>
			<dependency>
				<groupId>com.jayway.awaitility</groupId>
				<artifactId>awaitility</artifactId>
				<version>${awaitility.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-jpa</artifactId>
				<version>${spring.data-jpa.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>${hibernate-entitymanager.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate-validator.version}</version>
			</dependency>
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>${joda-time.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-support</artifactId>
				<version>${spring-support.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.mail</groupId>
				<artifactId>mail</artifactId>
				<version>${javax.mail.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${commons-beanutils.version}</version>
			</dependency>
			<dependency>
				<groupId>com.amazonaws</groupId>
				<artifactId>aws-java-sdk</artifactId>
				<version>${aws-java-sdk.version}</version>
			</dependency>
			<dependency>
				<groupId>redis.clients</groupId>
				<artifactId>jedis</artifactId>
				<version>${jedis.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>javax.websocket</groupId>
				<artifactId>javax.websocket-api</artifactId>
				<version>${javax.websocket-api.version}</version>
			</dependency>
			<dependency>
				<groupId>com.twitter</groupId>
				<artifactId>chill-java</artifactId>
				<version>${chill-java.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-ehcache</artifactId>
				<version>4.3.5.Final</version>
<!-- 				<version>${hibernate-version}</version> -->
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- Testing frameworks and tools should be available without explicit 
			declaration -->
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>${easymock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-core</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-classloading-base</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-reflect</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-support</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-easymock</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4-common</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4-rule</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4-rule-agent</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
		</dependency>
	</dependencies>
</project>
