<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd"
        default-lazy-init="false" >
        
    <context:annotation-config/>
	<context:component-scan base-package="com.lvl6.mobsters.domain.config"/>
	<context:component-scan base-package="com.lvl6.mobsters.domain.svcreg"/>

    <!-- Configuration Extension class needs an open transaction to load configuration content -->
	<tx:annotation-driven transaction-manager="lvl6Txm" mode="proxy" proxy-target-class="true"/>
	
<!-- Launches new flow executions and resumes existing executions. -->
<!-- 
	<flow:executor id=":w" registry-ref="flowRegistry" repository-type="singlekey" />
-->
	
<!-- 
	<task:annotation-driven executor="domainWorkerPool" mode="aspectj" />
	<task:executor id="domainWorkerPool" 
	 keep-alive="10" pool-size="2-7" queue-capacity="256"
	 rejection-policy="CALLER_RUNS"/>
-->	
	 
	<!-- Don't hold on to this.  Instead, mandate that all event handlers
	     implement all their handler methods as @Async and wired to an
	     Executor thread pool they've sized based on an understanding of
	     their own requirements.  It's not easy for the domain model to
	     spec out a thread pool sized for usage it knows nothing about.
	     
	     Alternately, emphasize the importance that the consumer configure
	     this thread pool for their own needs since its given defaults
	     represent an uneducated best guess. -->
<!-- 
	<task:executor id="asyncEventPool" rejection-policy="CALLER_RUNS"
	 keep-alive="10" pool-size="1-3" queue-capacity="128">
	</task:executor>
-->
</beans>