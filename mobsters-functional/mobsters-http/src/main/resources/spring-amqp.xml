<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp"
	xmlns:int-stream="http://www.springframework.org/schema/integration/stream"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/data/jpa
    	http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
    	http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/rabbit
        http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd
        http://www.springframework.org/schema/integration/amqp 
        http://www.springframework.org/schema/integration/amqp/spring-integration-amqp.xsd
        http://www.springframework.org/schema/integration/stream 
        http://www.springframework.org/schema/integration/stream/spring-integration-stream.xsd
		">


	<bean id="serverInstance" class="com.lvl6.mobsters.server.ServerInstance" />
	<bean id="eventsFromOtherServersDispatcher" class="com.lvl6.eventdispatcher.EventsFromOtherServersDispatcher" />

	<bean id="rabbitConnectionFactory" class="com.rabbitmq.client.ConnectionFactory">
		<property name="host" value="${amqp.host}" />
		<property name="requestedHeartbeat" value="10" />
	</bean>


	<rabbit:connection-factory id="amqpConnectionFactory"
		host="${amqp.host}" 
		username="${amqp.user}" 
		password="${amqp.pass}"
		virtual-host="${amqp.vhost}" 
		channel-cache-size="30"
		connection-factory="rabbitConnectionFactory" />


	<rabbit:admin id="rabbitAdmin" connection-factory="amqpConnectionFactory" />


	<rabbit:topic-exchange name="serverMessages"
		auto-delete="false" durable="true">
		<rabbit:bindings>
			<rabbit:binding queue="serverMessagesQueue" pattern="messageForAllServers"></rabbit:binding>
			<rabbit:binding queue="normalEventsQueue" pattern="#{serverInstance.serverId()+'normalEvents'}"></rabbit:binding>
			<rabbit:binding queue="preDatabaseEventsQueue" pattern="#{serverInstance.serverId()+'preDatabaseEvents'}"></rabbit:binding>
			<rabbit:binding queue="broadcastEventsQueue" pattern="#{serverInstance.serverId()+'broadcastEvents'}"></rabbit:binding>
		</rabbit:bindings>
	</rabbit:topic-exchange>


	<rabbit:queue id="serverMessagesQueue" />
	
	<rabbit:queue id="normalEvents" name="#{serverInstance.serverId()+'normalEventsQueue'}" />
	<rabbit:queue id="preDatabaseEvents" name="#{serverInstance.serverId()+'preDatabaseEventsQueue'}" />
	<rabbit:queue id="broadcastEvents" name="#{serverInstance.serverId()+'broadcastEventsQueue'}" />

	<rabbit:listener-container
		connection-factory="amqpConnectionFactory" 
		concurrency="1"
		error-handler="amqpErrorHandler"
		message-converter="jsonConverter">
		<rabbit:listener queues="serverMessagesQueue" ref="serverEventHandler"	method="onMessage" />
	</rabbit:listener-container>



	<rabbit:listener-container
		connection-factory="amqpConnectionFactory" 
		concurrency="3"
		error-handler="amqpErrorHandler"
		<rabbit:listener queues="normalEventsQueue" ref="eventsFromOtherServersDispatcher"	method="handleNormalEvent" />
	</rabbit:listener-container>

	<rabbit:listener-container
		connection-factory="amqpConnectionFactory" 
		concurrency="3"
		error-handler="amqpErrorHandler"
		<rabbit:listener queues="preDatabaseEventsQueue" ref="eventsFromOtherServersDispatcher"	method="handlePreDatabaseEvent" />
	</rabbit:listener-container>

	<rabbit:listener-container
		connection-factory="amqpConnectionFactory" 
		concurrency="3"
		error-handler="amqpErrorHandler"
		<rabbit:listener queues="broadcastEventsQueue" ref="eventsFromOtherServersDispatcher"	method="handleBroadcastEvent" />
	</rabbit:listener-container>



	<rabbit:template id="serverMessagesTemplate"
		connection-factory="amqpConnectionFactory" 
		channel-transacted="true"
		exchange="serverMessages"  />
<!-- 

	<rabbit:listener-container
		connection-factory="amqpConnectionFactory" 
		concurrency="42" 
		prefetch="42"
		error-handler="amqpErrorHandler">
		<rabbit:listener queues="clientMessages" ref="clientEventHandler"	method="onMessage" />
	</rabbit:listener-container> -->

<!-- 
	<rabbit:template id="chatMessagesTemplate"
		connection-factory="amqpConnectionFactory" 
		channel-transacted="true"
		exchange="${amqp.chat.exchange}" />
 -->
	<bean id="serverEventHandler" class="com.lvl6.eventhandlers.AmqpServerEventHandler" />
	<bean id="amqpErrorHandler" class="com.lvl6.eventhandlers.AmqpErrorHandler" />

</beans>