package com.lvl6.mobsters.dynamo;

import java.util.Date;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBRangeKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBVersionAttribute;

@DynamoDBTable(tableName = "UserFacebookInviteForSlot")
public class UserFacebookInviteForSlot
{

//	private String id;
	private String userId;
	private Long version;

//	private String inviterUserUuid;
	//facebookId should be a sufficient rangeKey
	private String recipientFacebookId;
	private Date timeOfInvite;
	private Date timeAccepted;
	private int userStructId;
	private int userStructFbLvl;
	private Date timeRedeemed;

	public UserFacebookInviteForSlot()
	{
	}

	public UserFacebookInviteForSlot( final int id, final String userId,
	    final String recipientFacebookId, final Date timeOfInvite,
	    final Date timeAccepted, final int userStructId,
	    final int userStructFbLvl, final Date timeRedeemed )
	{
		super();
		this.userId = userId;
		this.recipientFacebookId = recipientFacebookId;
		this.timeOfInvite = timeOfInvite;
		this.timeAccepted = timeAccepted;
		this.userStructId = userStructId;
		this.userStructFbLvl = userStructFbLvl;
		this.timeRedeemed = timeRedeemed;
	}
	/*
	@DynamoDBHashKey(attributeName = "id")
	@DynamoDBAutoGeneratedKey
	public String getId()
	{
		return id;
	}

	public void setId( final String id )
	{
		this.id = id;
	}
	*/
	
	@DynamoDBHashKey(attributeName = "userId")
	public String getUserId()
	{
		return userId;
	}

	public void setUserId( String userId )
	{
		this.userId = userId;
	}

	@DynamoDBVersionAttribute
	public Long getVersion()
	{
		return version;
	}

	public void setVersion( final Long version )
	{
		this.version = version;
	}

	/*
	public String getInviterUserUuid()
	{
		return inviterUserUuid;
	}

	public void setInviterUserUuid( final String inviterUserUuid )
	{
		this.inviterUserUuid = inviterUserUuid;
	}*/

	@DynamoDBRangeKey(attributeName = "recipientFacebookId")
	public String getRecipientFacebookId()
	{
		return recipientFacebookId;
	}

	public void setRecipientFacebookId( final String recipientFacebookId )
	{
		this.recipientFacebookId = recipientFacebookId;
	}

	public Date getTimeOfInvite()
	{
		return timeOfInvite;
	}

	public void setTimeOfInvite( final Date timeOfInvite )
	{
		this.timeOfInvite = timeOfInvite;
	}

	public Date getTimeAccepted()
	{
		return timeAccepted;
	}

	public void setTimeAccepted( final Date timeAccepted )
	{
		this.timeAccepted = timeAccepted;
	}

	public int getUserStructId()
	{
		return userStructId;
	}

	public void setUserStructId( final int userStructId )
	{
		this.userStructId = userStructId;
	}

	public int getUserStructFbLvl()
	{
		return userStructFbLvl;
	}

	public void setUserStructFbLvl( final int userStructFbLvl )
	{
		this.userStructFbLvl = userStructFbLvl;
	}

	public Date getTimeRedeemed()
	{
		return timeRedeemed;
	}

	public void setTimeRedeemed( final Date timeRedeemed )
	{
		this.timeRedeemed = timeRedeemed;
	}

	@Override
	public String toString()
	{
		return "UserFacebookInviteForSlot [userId="
			+ userId
			+ ", recipientFacebookId="
			+ recipientFacebookId
			+ ", timeOfInvite="
			+ timeOfInvite
			+ ", timeAccepted="
			+ timeAccepted
			+ ", userStructId="
			+ userStructId
			+ ", userStructFbLvl="
			+ userStructFbLvl
			+ ", timeRedeemed="
			+ timeRedeemed
			+ "]";
	}

	@Override
	public int hashCode()
	{
		final int prime = 31;
		int result = 1;
		result = prime
			* result
			+ ((recipientFacebookId == null) ? 0 : recipientFacebookId.hashCode());
		result = prime
			* result
			+ ((userId == null) ? 0 : userId.hashCode());
		return result;
	}

	@Override
	public boolean equals( Object obj )
	{
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		UserFacebookInviteForSlot other = (UserFacebookInviteForSlot) obj;
		if (recipientFacebookId == null) {
			if (other.recipientFacebookId != null)
				return false;
		} else if (!recipientFacebookId.equals(other.recipientFacebookId))
			return false;
		if (userId == null) {
			if (other.userId != null)
				return false;
		} else if (!userId.equals(other.userId))
			return false;
		return true;
	}

}