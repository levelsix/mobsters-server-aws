package com.lvl6.mobsters.dynamo;

import java.util.Date;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBRangeKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBVersionAttribute;

@DynamoDBTable(
	tableName = "TaskForUserCompleted")
public class TaskForUserCompleted
{

	//private String id;

	private Long version;

	private String userId;

	private int taskId;

	private Date timeOfEntry;

	public TaskForUserCompleted()
	{}

	public TaskForUserCompleted( String userId, int taskId, Date timeOfEntry )
	{
		super();
		this.userId = userId;
		this.taskId = taskId;
		this.timeOfEntry = timeOfEntry;
	}
	/*
	@DynamoDBHashKey(
		attributeName = "id")
	@DynamoDBAutoGeneratedKey
	public String getId()
	{
		return id;
	}

	public void setId( String id )
	{
		this.id = id;
	}
	 */

	@DynamoDBVersionAttribute
	public Long getVersion()
	{
		return version;
	}

	public void setVersion( Long version )
	{
		this.version = version;
	}

	@DynamoDBHashKey(
		attributeName = "userId")
	public String getUserId()
	{
		return userId;
	}

	public void setUserId( String userId )
	{
		this.userId = userId;
	}

	@DynamoDBRangeKey(
		attributeName = "taskId")
	public int getTaskId()
	{
		return taskId;
	}

	public void setTaskId( int taskId )
	{
		this.taskId = taskId;
	}

	public Date getTimeOfEntry()
	{
		return timeOfEntry;
	}

	public void setTimeOfEntry( Date timeOfEntry )
	{
		this.timeOfEntry = timeOfEntry;
	}

	@Override
	public String toString()
	{
		return "TaskForUserCompleted [userId="
			+ userId
			+ ", taskId="
			+ taskId
			+ ", timeOfEntry="
			+ timeOfEntry
			+ "]";
	}

	@Override
	public int hashCode()
	{
		final int prime = 31;
		int result = 1;
		result = prime
			* result
			+ taskId;
		result = prime
			* result
			+ ((userId == null) ? 0 : userId.hashCode());
		return result;
	}

	@Override
	public boolean equals( Object obj )
	{
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		TaskForUserCompleted other = (TaskForUserCompleted) obj;
		if (taskId != other.taskId)
			return false;
		if (userId == null) {
			if (other.userId != null)
				return false;
		} else if (!userId.equals(other.userId))
			return false;
		return true;
	}

}
