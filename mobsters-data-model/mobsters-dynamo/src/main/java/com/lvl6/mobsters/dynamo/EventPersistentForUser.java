package com.lvl6.mobsters.dynamo;
import java.util.Date;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBRangeKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBVersionAttribute;

@DynamoDBTable(tableName="EventPersistentForUser")
public class EventPersistentForUser {



	private String userId;
	private int eventPersistentId;
//	private String id;
	private Long version;

	
	private Date timeOfEntry; // refers to time user started a daily event
	public EventPersistentForUser(){}
  public EventPersistentForUser(String userId, int eventPersistentId,
			Date timeOfEntry) {
		super();
		this.userId = userId;
		this.eventPersistentId = eventPersistentId;
		this.timeOfEntry = timeOfEntry;
	}


//	@DynamoDBHashKey(attributeName = "id")
//	@DynamoDBAutoGeneratedKey
//	public String getId(){return id;}
//	public void setId(String id){this.id = id;}
  
  
	  @DynamoDBHashKey(attributeName = "userId")
	  public String getUserId() {		return userId;
	  }
	  
	  public void setUserId(String userId) {
		  this.userId = userId;
	  }
	  
	  @DynamoDBRangeKey(attributeName = "eventPersistentId")
	  public int getEventPersistentId() {
		  return eventPersistentId;
	  }
	  
	  public void setEventPersistentId(int eventPersistentId) {
		  this.eventPersistentId = eventPersistentId;
	  }
	

	@DynamoDBVersionAttribute
	public Long getVersion(){return version;}
	public void setVersion(Long version){this.version = version;}

	public Date getTimeOfEntry() {
		return timeOfEntry;
	}

	public void setTimeOfEntry(Date timeOfEntry) {
		this.timeOfEntry = timeOfEntry;
	}
	@Override
	public String toString()
	{
		return "EventPersistentForUser [userId="
			+ userId
			+ ", eventPersistentId="
			+ eventPersistentId
			+ ", timeOfEntry="
			+ timeOfEntry
			+ "]";
	}
	@Override
	public int hashCode()
	{
		final int prime = 31;
		int result = 1;
		result = prime
			* result
			+ eventPersistentId;
		result = prime
			* result
			+ ((userId == null) ? 0 : userId.hashCode());
		return result;
	}
	@Override
	public boolean equals( Object obj )
	{
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		EventPersistentForUser other = (EventPersistentForUser) obj;
		if (eventPersistentId != other.eventPersistentId)
			return false;
		if (userId == null) {
			if (other.userId != null)
				return false;
		} else if (!userId.equals(other.userId))
			return false;
		return true;
	}
	
}
