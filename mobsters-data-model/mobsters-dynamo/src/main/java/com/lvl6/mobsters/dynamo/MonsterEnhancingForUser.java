package com.lvl6.mobsters.dynamo;
import java.util.Date;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBRangeKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBVersionAttribute;

@DynamoDBTable(tableName="MonsterEnhancingForUser")
public class MonsterEnhancingForUser {



//	private String id;
	private String userId;
	private String monsterForUserId;
	private Long version;

	

	private Date expectedStartTime;
//	private Date queuedTime;
	private int enhancingCost;  
	public MonsterEnhancingForUser(){}
	public MonsterEnhancingForUser(String userId, String monsterForUserId,
			Date expectedStartTime, int enhancingCost) {
		super();
		this.userId = userId;
		this.monsterForUserId = monsterForUserId;
		this.expectedStartTime = expectedStartTime;
		this.enhancingCost = enhancingCost;
	}


//	@DynamoDBHashKey(attributeName = "id")
//	@DynamoDBAutoGeneratedKey
//	public String getId(){return id;}
//	public void setId(String id){this.id = id;}

	@DynamoDBHashKey(attributeName = "userId")
	public String getUserId() {		return userId;
	}
	
	public void setUserId(String userId) {
		this.userId = userId;
	}
	
	@DynamoDBRangeKey(attributeName = "monsterForUserId")
	public String getMonsterForUserId() {
		return monsterForUserId;
	}
	
	public void setMonsterForUserId(String monsterForUserId) {
		this.monsterForUserId = monsterForUserId;
	}

	@DynamoDBVersionAttribute
	public Long getVersion(){return version;}
	public void setVersion(Long version){this.version = version;}

	public Date getExpectedStartTime() {
		return expectedStartTime;
	}

	public void setExpectedStartTime(Date expectedStartTime) {
		this.expectedStartTime = expectedStartTime;
	}

	public int getEnhancingCost() {
		return enhancingCost;
	}

	public void setEnhancingCost(int enhancingCost) {
		this.enhancingCost = enhancingCost;
	}

	@Override
	public String toString() {
		return "MonsterEnhancingForUser [userId=" + userId + ", monsterForUserId="
				+ monsterForUserId + ", expectedStartTime=" + expectedStartTime
				+ ", enhancingCost=" + enhancingCost + "]";
	}
	@Override
	public int hashCode()
	{
		final int prime = 31;
		int result = 1;
		result = prime
			* result
			+ ((monsterForUserId == null) ? 0 : monsterForUserId.hashCode());
		result = prime
			* result
			+ ((userId == null) ? 0 : userId.hashCode());
		return result;
	}
	@Override
	public boolean equals( Object obj )
	{
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		MonsterEnhancingForUser other = (MonsterEnhancingForUser) obj;
		if (monsterForUserId == null) {
			if (other.monsterForUserId != null)
				return false;
		} else if (!monsterForUserId.equals(other.monsterForUserId))
			return false;
		if (userId == null) {
			if (other.userId != null)
				return false;
		} else if (!userId.equals(other.userId))
			return false;
		return true;
	}
  

}