package com.lvl6.mobsters.dynamo;
import java.util.Date;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBRangeKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBVersionAttribute;

@DynamoDBTable(tableName="ObstacleForUser")
public class ObstacleForUser {



    private String userId;
	private Long version;
//	private String id;
	private String obstacleForUserId;
	

	private int obstacleId;
	private float xcoord;
	private float ycoord;
	private Date removalTime;
	private String orientation;	
	public ObstacleForUser() {
		super();
	}

	public ObstacleForUser(
		String userId, int obstacleId, float xcoord,
		float ycoord, Date removalTime, String orientation)
	{
		super();
		this.userId = userId;
		this.obstacleId = obstacleId;
		this.xcoord = xcoord;
		this.ycoord = ycoord;
		this.removalTime = removalTime;
		this.orientation = orientation;
	}

	@DynamoDBRangeKey(attributeName = "obstacleForUserId")
	@DynamoDBAutoGeneratedKey
	public String getObstacleForUserId(){
		return obstacleForUserId;
	}
	public void setObstacleForUserId(String obstacleForUserId){
		this.obstacleForUserId = obstacleForUserId;
	}

	@DynamoDBVersionAttribute
	public Long getVersion(){return version;}
	public void setVersion(Long version){this.version = version;}

	@DynamoDBHashKey(attributeName = "userId")
	public String getUserId() {	
		return userId;
	}

	public void setUserId(String userId) {
		this.userId = userId;
	}

	public int getObstacleId() {
		return obstacleId;
	}

	public void setObstacleId(int obstacleId) {
		this.obstacleId = obstacleId;
	}

	public float getXcoord() {
		return xcoord;
	}

	public void setXcoord(float xcoord) {
		this.xcoord = xcoord;
	}

	public float getYcoord() {
		return ycoord;
	}

	public void setYcoord(float ycoord) {
		this.ycoord = ycoord;
	}

	public Date getRemovalTime() {
		return removalTime;
	}

	public void setRemovalTime(Date removalTime) {
		this.removalTime = removalTime;
	}

	public String getOrientation() {
		return orientation;
	}

	public void setOrientation(String orientation) {
		this.orientation = orientation;
	}

	@Override
	public String toString()
	{
		return "ObstacleForUser [userId="
			+ userId
			+ ", obstacleForUserId="
			+ obstacleForUserId
			+ ", obstacleId="
			+ obstacleId
			+ ", xcoord="
			+ xcoord
			+ ", ycoord="
			+ ycoord
			+ ", removalTime="
			+ removalTime
			+ ", orientation="
			+ orientation
			+ "]";
	}

	@Override
	public int hashCode()
	{
		final int prime = 31;
		int result = 1;
		result = prime
			* result
			+ ((obstacleForUserId == null) ? 0 : obstacleForUserId.hashCode());
		result = prime
			* result
			+ ((userId == null) ? 0 : userId.hashCode());
		return result;
	}

	@Override
	public boolean equals( Object obj )
	{
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		ObstacleForUser other = (ObstacleForUser) obj;
		if (obstacleForUserId == null) {
			if (other.obstacleForUserId != null)
				return false;
		} else if (!obstacleForUserId.equals(other.obstacleForUserId))
			return false;
		if (userId == null) {
			if (other.userId != null)
				return false;
		} else if (!userId.equals(other.userId))
			return false;
		return true;
	}


}
