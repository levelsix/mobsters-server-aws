package com.lvl6.mobsters.dynamo;

import java.util.Date;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBRangeKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBVersionAttribute;

@DynamoDBTable(
	tableName = "StructureForUser")
public class StructureForUser
{

	private String userId;
	
	private String structureForUserId;

	private Long version;

//	private String id;

	private int structId;

	private Date lastRetrieved;

	private float xCoord;

	private float yCoord;

	// private CoordinatePair coordinates;

	// private int level;
	private Date purchaseTime;

	private boolean isComplete;

	private String orientation;

	private int fbInviteStructLvl;

	public StructureForUser()
	{}

	public StructureForUser(
		String userId,
		int structId,
		Date lastRetrieved,
		float xCoord,
		float yCoord,
		Date purchaseTime,
		boolean isComplete,
		String orientation,
		int fbInviteStructLvl )
	{
		super();
		this.userId = userId;
		this.structId = structId;
		this.lastRetrieved = lastRetrieved;
		this.xCoord = xCoord;
		this.yCoord = yCoord;
		this.purchaseTime = purchaseTime;
		this.isComplete = isComplete;
		this.orientation = orientation;
		this.fbInviteStructLvl = fbInviteStructLvl;
	}

//	@DynamoDBRangeKey(
//		attributeName = "id")
//	@DynamoDBAutoGeneratedKey
//	public String getId()
//	{
//		return id;
//	}
//
//	public void setId( final String id )
//	{
//		this.id = id;
//	}
	
	@DynamoDBHashKey(
			attributeName = "userId")
	public String getUserId()
	{
		return userId;
	}
	
	public void setUserId( final String userId )
	{
		this.userId = userId;
	}
	
	@DynamoDBRangeKey(
			attributeName = "structureForUserId")
	@DynamoDBAutoGeneratedKey
	public String getStructureForUserId()
	{
		return structureForUserId;
	}

	public void setStructureForUserId( final String structureForUserId )
	{
		this.structureForUserId = structureForUserId;
	}


	@DynamoDBVersionAttribute
	public Long getVersion()
	{
		return version;
	}

	public void setVersion( final Long version )
	{
		this.version = version;
	}

	public int getStructId()
	{
		return structId;
	}

	public void setStructId( final int structId )
	{
		this.structId = structId;
	}

	public Date getLastRetrieved()
	{
		return lastRetrieved;
	}

	public void setLastRetrieved( final Date lastRetrieved )
	{
		this.lastRetrieved = lastRetrieved;
	}

	public float getXCoord()
	{
		return xCoord;
	}

	public void setXCoord( float xCoord )
	{
		this.xCoord = xCoord;
	}

	public float getYCoord()
	{
		return yCoord;
	}

	public void setYCoord( float yCoord )
	{
		this.yCoord = yCoord;
	}

	public Date getPurchaseTime()
	{
		return purchaseTime;
	}

	public void setPurchaseTime( final Date purchaseTime )
	{
		this.purchaseTime = purchaseTime;
	}

	public boolean isComplete()
	{
		return isComplete;
	}

	public void setComplete( final boolean isComplete )
	{
		this.isComplete = isComplete;
	}

	public String getOrientation()
	{
		return orientation;
	}

	public void setOrientation( final String orientation )
	{
		this.orientation = orientation;
	}

	public int getFbInviteStructLvl()
	{
		return fbInviteStructLvl;
	}

	public void setFbInviteStructLvl( final int fbInviteStructLvl )
	{
		this.fbInviteStructLvl = fbInviteStructLvl;
	}

	@Override
	public String toString()
	{
		return "StructureForUser [userId="
			+ userId
			+ ", version="
			+ version
			+ ", structureForUserId="
			+ structureForUserId
			+ ", structId="
			+ structId
			+ ", lastRetrieved="
			+ lastRetrieved
			+ ", xCoord="
			+ xCoord
			+ ", yCoord="
			+ yCoord
			+ ", purchaseTime="
			+ purchaseTime
			+ ", isComplete="
			+ isComplete
			+ ", orientation="
			+ orientation
			+ ", fbInviteStructLvl="
			+ fbInviteStructLvl
			+ "]";
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime
				* result
				+ ((structureForUserId == null) ? 0 : structureForUserId
						.hashCode());
		result = prime * result + ((userId == null) ? 0 : userId.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		StructureForUser other = (StructureForUser) obj;
		if (structureForUserId == null) {
			if (other.structureForUserId != null)
				return false;
		} else if (!structureForUserId.equals(other.structureForUserId))
			return false;
		if (userId == null) {
			if (other.userId != null)
				return false;
		} else if (!userId.equals(other.userId))
			return false;
		return true;
	}

}
