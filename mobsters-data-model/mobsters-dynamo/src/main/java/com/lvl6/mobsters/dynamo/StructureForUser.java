package com.lvl6.mobsters.dynamo;

import java.util.Date;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBRangeKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBVersionAttribute;

@DynamoDBTable(
	tableName = "StructureForUser")
public class StructureForUser
{

	private String userId;

	private Long version;

	private String id;

	private int structId;

	private Date lastRetrieved;

	private CoordinatePair coordinates;

	// private int level;
	private Date purchaseTime;

	private boolean isComplete;

	private String orientation;

	private int fbInviteStructLvl;

	public StructureForUser()
	{}

	public StructureForUser(
		final String id,
		final String userId,
		final int structId,
		final Date lastRetrieved,
		final CoordinatePair coordinates,
		final Date purchaseTime,
		final boolean isComplete,
		final String orientation,
		final int fbInviteStructLvl )
	{
		super();
		this.id = id;
		this.userId = userId;
		this.structId = structId;
		this.lastRetrieved = lastRetrieved;
		this.coordinates = coordinates;
		this.purchaseTime = purchaseTime;
		this.isComplete = isComplete;
		this.orientation = orientation;
		this.fbInviteStructLvl = fbInviteStructLvl;
	}

	@DynamoDBRangeKey(
		attributeName = "id")
	@DynamoDBAutoGeneratedKey
	public String getId()
	{
		return id;
	}

	public void setId( final String id )
	{
		this.id = id;
	}

	@DynamoDBVersionAttribute
	public Long getVersion()
	{
		return version;
	}

	public void setVersion( final Long version )
	{
		this.version = version;
	}

	@DynamoDBHashKey(
		attributeName = "userId")
	public String getUserId()
	{
		return userId;
	}

	public void setUserId( final String userId )
	{
		this.userId = userId;
	}

	public int getStructId()
	{
		return structId;
	}

	public void setStructId( final int structId )
	{
		this.structId = structId;
	}

	public Date getLastRetrieved()
	{
		return lastRetrieved;
	}

	public void setLastRetrieved( final Date lastRetrieved )
	{
		this.lastRetrieved = lastRetrieved;
	}

	public CoordinatePair getCoordinates()
	{
		return coordinates;
	}

	public void setCoordinates( final CoordinatePair coordinates )
	{
		this.coordinates = coordinates;
	}

	public Date getPurchaseTime()
	{
		return purchaseTime;
	}

	public void setPurchaseTime( final Date purchaseTime )
	{
		this.purchaseTime = purchaseTime;
	}

	public boolean isComplete()
	{
		return isComplete;
	}

	public void setComplete( final boolean isComplete )
	{
		this.isComplete = isComplete;
	}

	public String getOrientation()
	{
		return orientation;
	}

	public void setOrientation( final String orientation )
	{
		this.orientation = orientation;
	}

	public int getFbInviteStructLvl()
	{
		return fbInviteStructLvl;
	}

	public void setFbInviteStructLvl( final int fbInviteStructLvl )
	{
		this.fbInviteStructLvl = fbInviteStructLvl;
	}

	@Override
	public String toString()
	{
		return "StructureForUser [id="
			+ id
			+ ", userId="
			+ userId
			+ ", structId="
			+ structId
			+ ", lastRetrieved="
			+ lastRetrieved
			+ ", coordinates="
			+ coordinates
			+ ", purchaseTime="
			+ purchaseTime
			+ ", isComplete="
			+ isComplete
			+ ", orientation="
			+ orientation
			+ ", fbInviteStructLvl="
			+ fbInviteStructLvl
			+ "]";
	}

	@Override
	public int hashCode()
	{
		final int prime = 31;
		int result = 1;
		result = (prime * result)
			+ ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals( final Object obj )
	{
		if (this == obj) { return true; }
		if (obj == null) { return false; }
		if (getClass() != obj.getClass()) { return false; }
		final StructureForUser other = (StructureForUser) obj;
		if (id == null) {
			if (other.id != null) { return false; }
		} else if (!id.equals(other.id)) { return false; }
		return true;
	}

}