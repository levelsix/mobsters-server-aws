package com.lvl6.dynamo;
import java.util.Date;


import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBVersionAttribute;

@DynamoDBTable(tableName="MonsterEvolvingForUser")
public class MonsterEvolvingForUser {



	private String id;
	private Long version;

	
	private long catalystMonsterForUserId;
	private long monsterForUserIdOne;
	private long monsterForUserIdTwo;
	private int userId;
	private Date startTime;
	public MonsterEvolvingForUser(){}
  public MonsterEvolvingForUser(long catalystMonsterForUserId,
			long monsterForUserIdOne, long monsterForUserIdTwo, int userId,
			Date startTime) {
		super();
		this.catalystMonsterForUserId = catalystMonsterForUserId;
		this.monsterForUserIdOne = monsterForUserIdOne;
		this.monsterForUserIdTwo = monsterForUserIdTwo;
		this.userId = userId;
		this.startTime = startTime;
	}


	@DynamoDBHashKey(attributeName = "id")
	@DynamoDBAutoGeneratedKey
	public String getId(){return id;}
	public void setId(String id){this.id = id;}


	@DynamoDBVersionAttribute
	public Long getVersion(){return version;}
	public void setVersion(Long version){this.version = version;}


	public long getCatalystMonsterForUserId() {		return catalystMonsterForUserId;
	}

	public void setCatalystMonsterForUserId(long catalystMonsterForUserId) {
		this.catalystMonsterForUserId = catalystMonsterForUserId;
	}

	public long getMonsterForUserIdOne() {
		return monsterForUserIdOne;
	}

	public void setMonsterForUserIdOne(long monsterForUserIdOne) {
		this.monsterForUserIdOne = monsterForUserIdOne;
	}

	public long getMonsterForUserIdTwo() {
		return monsterForUserIdTwo;
	}

	public void setMonsterForUserIdTwo(long monsterForUserIdTwo) {
		this.monsterForUserIdTwo = monsterForUserIdTwo;
	}

	public int getUserId() {
		return userId;
	}

	public void setUserId(int userId) {
		this.userId = userId;
	}

	public Date getStartTime() {
		return startTime;
	}

	public void setStartTime(Date startTime) {
		this.startTime = startTime;
	}

	@Override
	public String toString() {
		return "MonsterEvolvingForUser [catalystMonsterForUserId="
				+ catalystMonsterForUserId + ", monsterForUserIdOne="
				+ monsterForUserIdOne + ", monsterForUserIdTwo=" + monsterForUserIdTwo
				+ ", userId=" + userId + ", startTime=" + startTime + "]";
	}
  
 	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		MonsterEvolvingForUser other = (MonsterEvolvingForUser) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}

}