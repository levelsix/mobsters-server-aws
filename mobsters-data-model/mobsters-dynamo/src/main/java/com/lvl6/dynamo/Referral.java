package com.lvl6.dynamo;
import java.util.Date;


import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBVersionAttribute;

@DynamoDBTable(tableName="Referral")
public class Referral {



	private String id;
	private Long version;
	
	private int referrerId;
	private int newlyReferredId;
	private Date timeOfReferral;
	private int coinsGivenToReferrer;
	public Referral(){}
	public Referral(int referrerId, int newlyReferredId, Date timeOfReferral,
			int coinsGivenToReferrer) {
		this.referrerId = referrerId;
		this.newlyReferredId = newlyReferredId;
		this.timeOfReferral = timeOfReferral;
		this.coinsGivenToReferrer = coinsGivenToReferrer;
	}


	@DynamoDBHashKey(attributeName = "id")
	@DynamoDBAutoGeneratedKey
	public String getId(){return id;}
	public void setId(String id){this.id = id;}


	@DynamoDBVersionAttribute
	public Long getVersion(){return version;}
	public void setVersion(Long version){this.version = version;}


	public int getReferrerId() {		return referrerId;
	}

	public int getNewlyReferredId() {
		return newlyReferredId;
	}

	public Date getTimeOfReferral() {
		return timeOfReferral;
	}

	public int getCoinsGivenToReferrer() {
		return coinsGivenToReferrer;
	}

	@Override
	public String toString() {
		return "Referral [referrerId=" + referrerId + ", newlyReferredId="
				+ newlyReferredId + ", timeOfReferral=" + timeOfReferral
				+ ", coinsGivenToReferrer=" + coinsGivenToReferrer + "]";
	}
 	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Referral other = (Referral) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}

}