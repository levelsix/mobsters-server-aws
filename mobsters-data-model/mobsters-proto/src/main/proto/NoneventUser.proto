//ALL REQUEST PROTOS SHOULD INCLUDE A MinimumUserProto AS optional that represents which client sent it/triggered it 
//DO NO START PROPERTY METHODS WITH THE WORDS NEW OR COPY
//BAD!!! DON'T START NAMES WITH NEW OR COPY

package proto;

option java_package = "com.lvl6.mobsters.noneventproto";
option java_outer_classname = "NoneventUserProto";
//DO NOT USE ID AS THE NAME OF A PROPERTY IN ANY PROTO

//------------------------------------------------------------------------------------------
//put in here because MinimumUserProto uses it.
//Was in Clan.proto but that file references this file, so
//import cycle is created, so not allowed.
message ClanProto {
	optional string clanUuid = 1;
	optional string name = 2;
	optional int64 createTime = 4;
	optional string description = 5;
	optional string tag = 6;
	optional bool requestToJoinRequired = 7;
	optional int32 clanIconId = 8; 
}

//------------------------------------------------------------------------------------------

message MinimumUserProto {
	optional string userUuid = 1;
	optional string name = 2;
	optional ClanProto clan = 3;
	optional int32 level = 4;
}

//------------------------------------------------------------------------------------------

message MinimumUserProtoWithFacebookId {
	optional MinimumUserProto minUserProto = 1;
	optional string facebookId = 2;
}

//------------------------------------------------------------------------------------------
//server does not create proto
message MinimumUserProtoWithMaxResources {
	optional MinimumUserProto minUserProto = 1;
	optional int32 maxCash = 2;
	optional int32 maxOil = 3;
}


//------------------------------------------------------------------------------------------

message UserFacebookInviteForSlotProto {
	optional string inviteUuid = 1;
	optional MinimumUserProtoWithFacebookId inviter = 2;
	optional string recipientFacebookId = 3;
	optional int64 timeOfInvite = 4;
	optional int64 timeAccepted = 5;
	optional string userStructUuid = 6;
	
	//also represents the user struct lvl,
	//most likely not the current struct lvl
	optional int32 structFbLvl = 7;
	
	optional int64 redeemedTime = 8;
}

//------------------------------------------------------------------------------------------

message UserProto {
	optional string userUuid = 1;
	optional string name = 2;
	optional bool isAdmin = 3;
	optional int32 level = 4;
	optional int32 gems = 5;
	optional int32 cash = 6;
	optional int32 oil = 7;
	optional int32 experience = 8;
	
	optional ClanProto clan = 9;
}
message UserCredentialProto {
	optional string userUuid = 1;
	optional string udid = 2;
	optional string facebookId = 3;	
}
message UserDataRarelyUsedProto {
	optional string userUuid = 1;
	optional string udidForHistory = 2;
	optional string gameCenterId = 3;
	optional string deviceToken = 4;
	optional bool fbIdSetOnUserCreate = 5;
	optional int64 lastLogin = 6;
	optional int64 lastLogout = 7;
	optional int64 createTime = 8;
	optional int64 lastObstacleSpawnTime = 9;
	optional int64 lastMiniJobGeneratedTime = 10;
}

//set in startup; whenever UpdateUserClient is sent, FullUserProto is sent, but
//most likely only one of the three will be set (mutually exclusive)
message FullUserProto {
	optional UserProto up = 1;
	optional UserCredentialProto ucp = 2; 
	optional UserDataRarelyUsedProto udrup = 3;
	
	optional UserPvpLeagueProto pvpLeagueInfo = 4;
}

//------------------------------------------------------------------------------------------

message StaticUserLevelInfoProto {
	optional int32 level = 1;
	optional int32 requiredExperience = 2; 
}

//------------------------------------------------------------------------------------------

//all the leaderboard information regarding user in pvp
message UserPvpLeagueProto {
	optional string userUuid = 1;
	optional int32 leagueId = 2; //pvp league id
	optional int32 rank = 3;
	optional int32 elo = 4; //client doesn't really need it, so will not be set :P
	optional int32 battlesWon = 5;
	optional int32 battlesLost = 6;
	optional int64 shieldEndTime = 7;
}
