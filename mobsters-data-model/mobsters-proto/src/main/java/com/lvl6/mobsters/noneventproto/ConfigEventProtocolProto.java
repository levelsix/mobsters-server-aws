// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConfigEventProtocol.proto

package com.lvl6.mobsters.noneventproto;

public final class ConfigEventProtocolProto {
  private ConfigEventProtocolProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum EventProtocolRequest
      implements com.google.protobuf.ProtocolMessageEnum {
    C_STARTUP_EVENT(0, 1),
    C_IN_APP_PURCHASE_EVENT(1, 2),
    C_PURCHASE_NORM_STRUCTURE_EVENT(2, 3),
    C_MOVE_OR_ROTATE_NORM_STRUCTURE_EVENT(3, 4),
    C_SET_FACEBOOK_ID_EVENT(4, 5),
    C_UPGRADE_NORM_STRUCTURE_EVENT(5, 6),
    C_RETRIEVE_CURRENCY_FROM_NORM_STRUCTURE_EVENT(6, 7),
    C_FINISH_NORM_STRUCT_WAITTIME_WITH_DIAMONDS_EVENT(7, 8),
    C_NORM_STRUCT_WAIT_COMPLETE_EVENT(8, 9),
    C_LOAD_PLAYER_CITY_EVENT(9, 10),
    C_EXCHANGE_GEMS_FOR_RESOURCES_EVENT(10, 11),
    C_QUEST_ACCEPT_EVENT(11, 12),
    C_QUEST_PROGRESS_EVENT(12, 13),
    C_QUEST_REDEEM_EVENT(13, 14),
    C_PURCHASE_CITY_EXPANSION_EVENT(14, 15),
    C_LEVEL_UP_EVENT(15, 17),
    C_ENABLE_APNS_EVENT(16, 18),
    C_USER_CREATE_EVENT(17, 19),
    C_LOAD_CITY_EVENT(18, 20),
    C_EARN_FREE_DIAMONDS_EVENT(19, 22),
    C_SEND_GROUP_CHAT_EVENT(20, 23),
    C_CREATE_CLAN_EVENT(21, 24),
    C_LEAVE_CLAN_EVENT(22, 25),
    C_REQUEST_JOIN_CLAN_EVENT(23, 26),
    C_RETRACT_REQUEST_JOIN_CLAN_EVENT(24, 27),
    C_APPROVE_OR_REJECT_REQUEST_TO_JOIN_CLAN_EVENT(25, 28),
    C_TRANSFER_CLAN_OWNERSHIP(26, 29),
    C_RETRIEVE_CLAN_INFO_EVENT(27, 30),
    C_CHANGE_CLAN_SETTINGS_EVENT(28, 31),
    C_BOOT_PLAYER_FROM_CLAN_EVENT(29, 32),
    C_SUBMIT_MONSTER_ENHANCEMENT_EVENT(30, 35),
    C_EVOLVE_MONSTER_EVENT(31, 36),
    C_PURCHASE_BOOSTER_PACK_EVENT(32, 37),
    C_EVOLUTION_FINISHED_EVENT(33, 38),
    C_ACHIEVEMENT_PROGRESS_EVENT(34, 39),
    C_PRIVATE_CHAT_POST_EVENT(35, 40),
    C_BEGIN_DUNGEON_EVENT(36, 43),
    C_END_DUNGEON_EVENT(37, 44),
    C_REVIVE_IN_DUNGEON_EVENT(38, 45),
    C_QUEUE_UP_EVENT(39, 46),
    C_UPDATE_MONSTER_HEALTH_EVENT(40, 47),
    C_HEAL_MONSTER_EVENT(41, 48),
    C_ACHIEVEMENT_REDEEM_EVENT(42, 49),
    C_ADD_MONSTER_TO_BATTLE_TEAM_EVENT(43, 50),
    C_REMOVE_MONSTER_FROM_BATTLE_TEAM_EVENT(44, 51),
    C_INCREASE_MONSTER_INVENTORY_SLOT_EVENT(45, 52),
    C_ENHANCEMENT_WAIT_TIME_COMPLETE_EVENT(46, 53),
    C_COMBINE_USER_MONSTER_PIECES_EVENT(47, 54),
    C_SELL_USER_MONSTER_EVENT(48, 55),
    C_INVITE_FB_FRIENDS_FOR_SLOTS_EVENT(49, 56),
    C_ACCEPT_AND_REJECT_FB_INVITE_FOR_SLOTS_EVENT(50, 57),
    C_UPDATE_USER_CURRENCY_EVENT(51, 59),
    C_BEGIN_PVP_BATTLE_EVENT(52, 60),
    C_END_PVP_BATTLE_EVENT(53, 61),
    C_BEGIN_CLAN_RAID_EVENT(54, 62),
    C_ATTACK_CLAN_RAID_MONSTER_EVENT(55, 63),
    C_RECORD_CLAN_RAID_STATS_EVENT(56, 64),
    C_PROMOTE_DEMOTE_CLAN_MEMBER_EVENT(57, 65),
    C_SET_GAME_CENTER_ID_EVENT(58, 66),
    C_SPAWN_OBSTACLE_EVENT(59, 67),
    C_BEGIN_OBSTACLE_REMOVAL_EVENT(60, 68),
    C_OBSTACLE_REMOVAL_COMPLETE_EVENT(61, 69),
    C_SPAWN_MINI_JOB_EVENT(62, 70),
    C_BEGIN_MINI_JOB_EVENT(63, 71),
    C_COMPLETE_MINI_JOB_EVENT(64, 72),
    C_REDEEM_MINI_JOB_EVENT(65, 73),
    C_LOGOUT_EVENT(66, 101),
    ;
    
    public static final int C_STARTUP_EVENT_VALUE = 1;
    public static final int C_IN_APP_PURCHASE_EVENT_VALUE = 2;
    public static final int C_PURCHASE_NORM_STRUCTURE_EVENT_VALUE = 3;
    public static final int C_MOVE_OR_ROTATE_NORM_STRUCTURE_EVENT_VALUE = 4;
    public static final int C_SET_FACEBOOK_ID_EVENT_VALUE = 5;
    public static final int C_UPGRADE_NORM_STRUCTURE_EVENT_VALUE = 6;
    public static final int C_RETRIEVE_CURRENCY_FROM_NORM_STRUCTURE_EVENT_VALUE = 7;
    public static final int C_FINISH_NORM_STRUCT_WAITTIME_WITH_DIAMONDS_EVENT_VALUE = 8;
    public static final int C_NORM_STRUCT_WAIT_COMPLETE_EVENT_VALUE = 9;
    public static final int C_LOAD_PLAYER_CITY_EVENT_VALUE = 10;
    public static final int C_EXCHANGE_GEMS_FOR_RESOURCES_EVENT_VALUE = 11;
    public static final int C_QUEST_ACCEPT_EVENT_VALUE = 12;
    public static final int C_QUEST_PROGRESS_EVENT_VALUE = 13;
    public static final int C_QUEST_REDEEM_EVENT_VALUE = 14;
    public static final int C_PURCHASE_CITY_EXPANSION_EVENT_VALUE = 15;
    public static final int C_LEVEL_UP_EVENT_VALUE = 17;
    public static final int C_ENABLE_APNS_EVENT_VALUE = 18;
    public static final int C_USER_CREATE_EVENT_VALUE = 19;
    public static final int C_LOAD_CITY_EVENT_VALUE = 20;
    public static final int C_EARN_FREE_DIAMONDS_EVENT_VALUE = 22;
    public static final int C_SEND_GROUP_CHAT_EVENT_VALUE = 23;
    public static final int C_CREATE_CLAN_EVENT_VALUE = 24;
    public static final int C_LEAVE_CLAN_EVENT_VALUE = 25;
    public static final int C_REQUEST_JOIN_CLAN_EVENT_VALUE = 26;
    public static final int C_RETRACT_REQUEST_JOIN_CLAN_EVENT_VALUE = 27;
    public static final int C_APPROVE_OR_REJECT_REQUEST_TO_JOIN_CLAN_EVENT_VALUE = 28;
    public static final int C_TRANSFER_CLAN_OWNERSHIP_VALUE = 29;
    public static final int C_RETRIEVE_CLAN_INFO_EVENT_VALUE = 30;
    public static final int C_CHANGE_CLAN_SETTINGS_EVENT_VALUE = 31;
    public static final int C_BOOT_PLAYER_FROM_CLAN_EVENT_VALUE = 32;
    public static final int C_SUBMIT_MONSTER_ENHANCEMENT_EVENT_VALUE = 35;
    public static final int C_EVOLVE_MONSTER_EVENT_VALUE = 36;
    public static final int C_PURCHASE_BOOSTER_PACK_EVENT_VALUE = 37;
    public static final int C_EVOLUTION_FINISHED_EVENT_VALUE = 38;
    public static final int C_ACHIEVEMENT_PROGRESS_EVENT_VALUE = 39;
    public static final int C_PRIVATE_CHAT_POST_EVENT_VALUE = 40;
    public static final int C_BEGIN_DUNGEON_EVENT_VALUE = 43;
    public static final int C_END_DUNGEON_EVENT_VALUE = 44;
    public static final int C_REVIVE_IN_DUNGEON_EVENT_VALUE = 45;
    public static final int C_QUEUE_UP_EVENT_VALUE = 46;
    public static final int C_UPDATE_MONSTER_HEALTH_EVENT_VALUE = 47;
    public static final int C_HEAL_MONSTER_EVENT_VALUE = 48;
    public static final int C_ACHIEVEMENT_REDEEM_EVENT_VALUE = 49;
    public static final int C_ADD_MONSTER_TO_BATTLE_TEAM_EVENT_VALUE = 50;
    public static final int C_REMOVE_MONSTER_FROM_BATTLE_TEAM_EVENT_VALUE = 51;
    public static final int C_INCREASE_MONSTER_INVENTORY_SLOT_EVENT_VALUE = 52;
    public static final int C_ENHANCEMENT_WAIT_TIME_COMPLETE_EVENT_VALUE = 53;
    public static final int C_COMBINE_USER_MONSTER_PIECES_EVENT_VALUE = 54;
    public static final int C_SELL_USER_MONSTER_EVENT_VALUE = 55;
    public static final int C_INVITE_FB_FRIENDS_FOR_SLOTS_EVENT_VALUE = 56;
    public static final int C_ACCEPT_AND_REJECT_FB_INVITE_FOR_SLOTS_EVENT_VALUE = 57;
    public static final int C_UPDATE_USER_CURRENCY_EVENT_VALUE = 59;
    public static final int C_BEGIN_PVP_BATTLE_EVENT_VALUE = 60;
    public static final int C_END_PVP_BATTLE_EVENT_VALUE = 61;
    public static final int C_BEGIN_CLAN_RAID_EVENT_VALUE = 62;
    public static final int C_ATTACK_CLAN_RAID_MONSTER_EVENT_VALUE = 63;
    public static final int C_RECORD_CLAN_RAID_STATS_EVENT_VALUE = 64;
    public static final int C_PROMOTE_DEMOTE_CLAN_MEMBER_EVENT_VALUE = 65;
    public static final int C_SET_GAME_CENTER_ID_EVENT_VALUE = 66;
    public static final int C_SPAWN_OBSTACLE_EVENT_VALUE = 67;
    public static final int C_BEGIN_OBSTACLE_REMOVAL_EVENT_VALUE = 68;
    public static final int C_OBSTACLE_REMOVAL_COMPLETE_EVENT_VALUE = 69;
    public static final int C_SPAWN_MINI_JOB_EVENT_VALUE = 70;
    public static final int C_BEGIN_MINI_JOB_EVENT_VALUE = 71;
    public static final int C_COMPLETE_MINI_JOB_EVENT_VALUE = 72;
    public static final int C_REDEEM_MINI_JOB_EVENT_VALUE = 73;
    public static final int C_LOGOUT_EVENT_VALUE = 101;
    
    
    public final int getNumber() { return value; }
    
    public static EventProtocolRequest valueOf(int value) {
      switch (value) {
        case 1: return C_STARTUP_EVENT;
        case 2: return C_IN_APP_PURCHASE_EVENT;
        case 3: return C_PURCHASE_NORM_STRUCTURE_EVENT;
        case 4: return C_MOVE_OR_ROTATE_NORM_STRUCTURE_EVENT;
        case 5: return C_SET_FACEBOOK_ID_EVENT;
        case 6: return C_UPGRADE_NORM_STRUCTURE_EVENT;
        case 7: return C_RETRIEVE_CURRENCY_FROM_NORM_STRUCTURE_EVENT;
        case 8: return C_FINISH_NORM_STRUCT_WAITTIME_WITH_DIAMONDS_EVENT;
        case 9: return C_NORM_STRUCT_WAIT_COMPLETE_EVENT;
        case 10: return C_LOAD_PLAYER_CITY_EVENT;
        case 11: return C_EXCHANGE_GEMS_FOR_RESOURCES_EVENT;
        case 12: return C_QUEST_ACCEPT_EVENT;
        case 13: return C_QUEST_PROGRESS_EVENT;
        case 14: return C_QUEST_REDEEM_EVENT;
        case 15: return C_PURCHASE_CITY_EXPANSION_EVENT;
        case 17: return C_LEVEL_UP_EVENT;
        case 18: return C_ENABLE_APNS_EVENT;
        case 19: return C_USER_CREATE_EVENT;
        case 20: return C_LOAD_CITY_EVENT;
        case 22: return C_EARN_FREE_DIAMONDS_EVENT;
        case 23: return C_SEND_GROUP_CHAT_EVENT;
        case 24: return C_CREATE_CLAN_EVENT;
        case 25: return C_LEAVE_CLAN_EVENT;
        case 26: return C_REQUEST_JOIN_CLAN_EVENT;
        case 27: return C_RETRACT_REQUEST_JOIN_CLAN_EVENT;
        case 28: return C_APPROVE_OR_REJECT_REQUEST_TO_JOIN_CLAN_EVENT;
        case 29: return C_TRANSFER_CLAN_OWNERSHIP;
        case 30: return C_RETRIEVE_CLAN_INFO_EVENT;
        case 31: return C_CHANGE_CLAN_SETTINGS_EVENT;
        case 32: return C_BOOT_PLAYER_FROM_CLAN_EVENT;
        case 35: return C_SUBMIT_MONSTER_ENHANCEMENT_EVENT;
        case 36: return C_EVOLVE_MONSTER_EVENT;
        case 37: return C_PURCHASE_BOOSTER_PACK_EVENT;
        case 38: return C_EVOLUTION_FINISHED_EVENT;
        case 39: return C_ACHIEVEMENT_PROGRESS_EVENT;
        case 40: return C_PRIVATE_CHAT_POST_EVENT;
        case 43: return C_BEGIN_DUNGEON_EVENT;
        case 44: return C_END_DUNGEON_EVENT;
        case 45: return C_REVIVE_IN_DUNGEON_EVENT;
        case 46: return C_QUEUE_UP_EVENT;
        case 47: return C_UPDATE_MONSTER_HEALTH_EVENT;
        case 48: return C_HEAL_MONSTER_EVENT;
        case 49: return C_ACHIEVEMENT_REDEEM_EVENT;
        case 50: return C_ADD_MONSTER_TO_BATTLE_TEAM_EVENT;
        case 51: return C_REMOVE_MONSTER_FROM_BATTLE_TEAM_EVENT;
        case 52: return C_INCREASE_MONSTER_INVENTORY_SLOT_EVENT;
        case 53: return C_ENHANCEMENT_WAIT_TIME_COMPLETE_EVENT;
        case 54: return C_COMBINE_USER_MONSTER_PIECES_EVENT;
        case 55: return C_SELL_USER_MONSTER_EVENT;
        case 56: return C_INVITE_FB_FRIENDS_FOR_SLOTS_EVENT;
        case 57: return C_ACCEPT_AND_REJECT_FB_INVITE_FOR_SLOTS_EVENT;
        case 59: return C_UPDATE_USER_CURRENCY_EVENT;
        case 60: return C_BEGIN_PVP_BATTLE_EVENT;
        case 61: return C_END_PVP_BATTLE_EVENT;
        case 62: return C_BEGIN_CLAN_RAID_EVENT;
        case 63: return C_ATTACK_CLAN_RAID_MONSTER_EVENT;
        case 64: return C_RECORD_CLAN_RAID_STATS_EVENT;
        case 65: return C_PROMOTE_DEMOTE_CLAN_MEMBER_EVENT;
        case 66: return C_SET_GAME_CENTER_ID_EVENT;
        case 67: return C_SPAWN_OBSTACLE_EVENT;
        case 68: return C_BEGIN_OBSTACLE_REMOVAL_EVENT;
        case 69: return C_OBSTACLE_REMOVAL_COMPLETE_EVENT;
        case 70: return C_SPAWN_MINI_JOB_EVENT;
        case 71: return C_BEGIN_MINI_JOB_EVENT;
        case 72: return C_COMPLETE_MINI_JOB_EVENT;
        case 73: return C_REDEEM_MINI_JOB_EVENT;
        case 101: return C_LOGOUT_EVENT;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<EventProtocolRequest>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EventProtocolRequest>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EventProtocolRequest>() {
            public EventProtocolRequest findValueByNumber(int number) {
              return EventProtocolRequest.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.lvl6.mobsters.noneventproto.ConfigEventProtocolProto.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final EventProtocolRequest[] VALUES = {
      C_STARTUP_EVENT, C_IN_APP_PURCHASE_EVENT, C_PURCHASE_NORM_STRUCTURE_EVENT, C_MOVE_OR_ROTATE_NORM_STRUCTURE_EVENT, C_SET_FACEBOOK_ID_EVENT, C_UPGRADE_NORM_STRUCTURE_EVENT, C_RETRIEVE_CURRENCY_FROM_NORM_STRUCTURE_EVENT, C_FINISH_NORM_STRUCT_WAITTIME_WITH_DIAMONDS_EVENT, C_NORM_STRUCT_WAIT_COMPLETE_EVENT, C_LOAD_PLAYER_CITY_EVENT, C_EXCHANGE_GEMS_FOR_RESOURCES_EVENT, C_QUEST_ACCEPT_EVENT, C_QUEST_PROGRESS_EVENT, C_QUEST_REDEEM_EVENT, C_PURCHASE_CITY_EXPANSION_EVENT, C_LEVEL_UP_EVENT, C_ENABLE_APNS_EVENT, C_USER_CREATE_EVENT, C_LOAD_CITY_EVENT, C_EARN_FREE_DIAMONDS_EVENT, C_SEND_GROUP_CHAT_EVENT, C_CREATE_CLAN_EVENT, C_LEAVE_CLAN_EVENT, C_REQUEST_JOIN_CLAN_EVENT, C_RETRACT_REQUEST_JOIN_CLAN_EVENT, C_APPROVE_OR_REJECT_REQUEST_TO_JOIN_CLAN_EVENT, C_TRANSFER_CLAN_OWNERSHIP, C_RETRIEVE_CLAN_INFO_EVENT, C_CHANGE_CLAN_SETTINGS_EVENT, C_BOOT_PLAYER_FROM_CLAN_EVENT, C_SUBMIT_MONSTER_ENHANCEMENT_EVENT, C_EVOLVE_MONSTER_EVENT, C_PURCHASE_BOOSTER_PACK_EVENT, C_EVOLUTION_FINISHED_EVENT, C_ACHIEVEMENT_PROGRESS_EVENT, C_PRIVATE_CHAT_POST_EVENT, C_BEGIN_DUNGEON_EVENT, C_END_DUNGEON_EVENT, C_REVIVE_IN_DUNGEON_EVENT, C_QUEUE_UP_EVENT, C_UPDATE_MONSTER_HEALTH_EVENT, C_HEAL_MONSTER_EVENT, C_ACHIEVEMENT_REDEEM_EVENT, C_ADD_MONSTER_TO_BATTLE_TEAM_EVENT, C_REMOVE_MONSTER_FROM_BATTLE_TEAM_EVENT, C_INCREASE_MONSTER_INVENTORY_SLOT_EVENT, C_ENHANCEMENT_WAIT_TIME_COMPLETE_EVENT, C_COMBINE_USER_MONSTER_PIECES_EVENT, C_SELL_USER_MONSTER_EVENT, C_INVITE_FB_FRIENDS_FOR_SLOTS_EVENT, C_ACCEPT_AND_REJECT_FB_INVITE_FOR_SLOTS_EVENT, C_UPDATE_USER_CURRENCY_EVENT, C_BEGIN_PVP_BATTLE_EVENT, C_END_PVP_BATTLE_EVENT, C_BEGIN_CLAN_RAID_EVENT, C_ATTACK_CLAN_RAID_MONSTER_EVENT, C_RECORD_CLAN_RAID_STATS_EVENT, C_PROMOTE_DEMOTE_CLAN_MEMBER_EVENT, C_SET_GAME_CENTER_ID_EVENT, C_SPAWN_OBSTACLE_EVENT, C_BEGIN_OBSTACLE_REMOVAL_EVENT, C_OBSTACLE_REMOVAL_COMPLETE_EVENT, C_SPAWN_MINI_JOB_EVENT, C_BEGIN_MINI_JOB_EVENT, C_COMPLETE_MINI_JOB_EVENT, C_REDEEM_MINI_JOB_EVENT, C_LOGOUT_EVENT, 
    };
    
    public static EventProtocolRequest valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private EventProtocolRequest(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:proto.EventProtocolRequest)
  }
  
  public enum EventProtocolResponse
      implements com.google.protobuf.ProtocolMessageEnum {
    S_STARTUP_EVENT(0, 1),
    S_IN_APP_PURCHASE_EVENT(1, 2),
    S_PURCHASE_NORM_STRUCTURE_EVENT(2, 3),
    S_MOVE_OR_ROTATE_NORM_STRUCTURE_EVENT(3, 4),
    S_SET_FACEBOOK_ID_EVENT(4, 5),
    S_UPGRADE_NORM_STRUCTURE_EVENT(5, 6),
    S_RETRIEVE_CURRENCY_FROM_NORM_STRUCTURE_EVENT(6, 7),
    S_FINISH_NORM_STRUCT_WAITTIME_WITH_DIAMONDS_EVENT(7, 8),
    S_NORM_STRUCT_WAIT_COMPLETE_EVENT(8, 9),
    S_LOAD_PLAYER_CITY_EVENT(9, 10),
    S_EXCHANGE_GEMS_FOR_RESOURCES_EVENT(10, 11),
    S_QUEST_ACCEPT_EVENT(11, 12),
    S_QUEST_PROGRESS_EVENT(12, 13),
    S_QUEST_REDEEM_EVENT(13, 14),
    S_PURCHASE_CITY_EXPANSION_EVENT(14, 15),
    S_LEVEL_UP_EVENT(15, 17),
    S_ENABLE_APNS_EVENT(16, 18),
    S_USER_CREATE_EVENT(17, 19),
    S_LOAD_CITY_EVENT(18, 20),
    S_EARN_FREE_DIAMONDS_EVENT(19, 22),
    S_SEND_GROUP_CHAT_EVENT(20, 23),
    S_CREATE_CLAN_EVENT(21, 24),
    S_LEAVE_CLAN_EVENT(22, 25),
    S_REQUEST_JOIN_CLAN_EVENT(23, 26),
    S_RETRACT_REQUEST_JOIN_CLAN_EVENT(24, 27),
    S_APPROVE_OR_REJECT_REQUEST_TO_JOIN_CLAN_EVENT(25, 28),
    S_TRANSFER_CLAN_OWNERSHIP(26, 29),
    S_RETRIEVE_CLAN_INFO_EVENT(27, 30),
    S_CHANGE_CLAN_SETTINGS_EVENT(28, 31),
    S_BOOT_PLAYER_FROM_CLAN_EVENT(29, 32),
    S_SUBMIT_MONSTER_ENHANCEMENT_EVENT(30, 35),
    S_EVOLVE_MONSTER_EVENT(31, 36),
    S_PURCHASE_BOOSTER_PACK_EVENT(32, 37),
    S_EVOLUTION_FINISHED_EVENT(33, 38),
    S_ACHIEVEMENT_PROGRESS_EVENT(34, 39),
    S_PRIVATE_CHAT_POST_EVENT(35, 40),
    S_BEGIN_DUNGEON_EVENT(36, 43),
    S_END_DUNGEON_EVENT(37, 44),
    S_REVIVE_IN_DUNGEON_EVENT(38, 45),
    S_QUEUE_UP_EVENT(39, 46),
    S_UPDATE_MONSTER_HEALTH_EVENT(40, 47),
    S_HEAL_MONSTER_EVENT(41, 48),
    S_ACHIEVEMENT_REDEEM_EVENT(42, 49),
    S_ADD_MONSTER_TO_BATTLE_TEAM_EVENT(43, 50),
    S_REMOVE_MONSTER_FROM_BATTLE_TEAM_EVENT(44, 51),
    S_INCREASE_MONSTER_INVENTORY_SLOT_EVENT(45, 52),
    S_ENHANCEMENT_WAIT_TIME_COMPLETE_EVENT(46, 53),
    S_COMBINE_USER_MONSTER_PIECES_EVENT(47, 54),
    S_SELL_USER_MONSTER_EVENT(48, 55),
    S_INVITE_FB_FRIENDS_FOR_SLOTS_EVENT(49, 56),
    S_ACCEPT_AND_REJECT_FB_INVITE_FOR_SLOTS_EVENT(50, 57),
    S_UPDATE_USER_CURRENCY_EVENT(51, 59),
    S_BEGIN_PVP_BATTLE_EVENT(52, 60),
    S_END_PVP_BATTLE_EVENT(53, 61),
    S_BEGIN_CLAN_RAID_EVENT(54, 62),
    S_ATTACK_CLAN_RAID_MONSTER_EVENT(55, 63),
    S_RECORD_CLAN_RAID_STATS_EVENT(56, 64),
    S_PROMOTE_DEMOTE_CLAN_MEMBER_EVENT(57, 65),
    S_SET_GAME_CENTER_ID_EVENT(58, 66),
    S_SPAWN_OBSTACLE_EVENT(59, 67),
    S_BEGIN_OBSTACLE_REMOVAL_EVENT(60, 68),
    S_OBSTACLE_REMOVAL_COMPLETE_EVENT(61, 69),
    S_SPAWN_MINI_JOB_EVENT(62, 70),
    S_BEGIN_MINI_JOB_EVENT(63, 71),
    S_COMPLETE_MINI_JOB_EVENT(64, 72),
    S_REDEEM_MINI_JOB_EVENT(65, 73),
    S_UPDATE_CLIENT_USER_EVENT(66, 101),
    S_REFERRAL_CODE_USED_EVENT(67, 102),
    S_PURGE_STATIC_DATA_EVENT(68, 103),
    S_RECEIVED_GROUP_CHAT_EVENT(69, 104),
    S_SEND_ADMIN_MESSAGE_EVENT(70, 105),
    S_GENERAL_NOTIFICATION_EVENT(71, 106),
    S_RECEIVED_RARE_BOOSTER_PURCHASE_EVENT(72, 107),
    S_AWARD_CLAN_RAID_STAGE_REWARD_EVENT(73, 108),
    S_FORCE_LOGOUT_EVENT(74, 109),
    ;
    
    public static final int S_STARTUP_EVENT_VALUE = 1;
    public static final int S_IN_APP_PURCHASE_EVENT_VALUE = 2;
    public static final int S_PURCHASE_NORM_STRUCTURE_EVENT_VALUE = 3;
    public static final int S_MOVE_OR_ROTATE_NORM_STRUCTURE_EVENT_VALUE = 4;
    public static final int S_SET_FACEBOOK_ID_EVENT_VALUE = 5;
    public static final int S_UPGRADE_NORM_STRUCTURE_EVENT_VALUE = 6;
    public static final int S_RETRIEVE_CURRENCY_FROM_NORM_STRUCTURE_EVENT_VALUE = 7;
    public static final int S_FINISH_NORM_STRUCT_WAITTIME_WITH_DIAMONDS_EVENT_VALUE = 8;
    public static final int S_NORM_STRUCT_WAIT_COMPLETE_EVENT_VALUE = 9;
    public static final int S_LOAD_PLAYER_CITY_EVENT_VALUE = 10;
    public static final int S_EXCHANGE_GEMS_FOR_RESOURCES_EVENT_VALUE = 11;
    public static final int S_QUEST_ACCEPT_EVENT_VALUE = 12;
    public static final int S_QUEST_PROGRESS_EVENT_VALUE = 13;
    public static final int S_QUEST_REDEEM_EVENT_VALUE = 14;
    public static final int S_PURCHASE_CITY_EXPANSION_EVENT_VALUE = 15;
    public static final int S_LEVEL_UP_EVENT_VALUE = 17;
    public static final int S_ENABLE_APNS_EVENT_VALUE = 18;
    public static final int S_USER_CREATE_EVENT_VALUE = 19;
    public static final int S_LOAD_CITY_EVENT_VALUE = 20;
    public static final int S_EARN_FREE_DIAMONDS_EVENT_VALUE = 22;
    public static final int S_SEND_GROUP_CHAT_EVENT_VALUE = 23;
    public static final int S_CREATE_CLAN_EVENT_VALUE = 24;
    public static final int S_LEAVE_CLAN_EVENT_VALUE = 25;
    public static final int S_REQUEST_JOIN_CLAN_EVENT_VALUE = 26;
    public static final int S_RETRACT_REQUEST_JOIN_CLAN_EVENT_VALUE = 27;
    public static final int S_APPROVE_OR_REJECT_REQUEST_TO_JOIN_CLAN_EVENT_VALUE = 28;
    public static final int S_TRANSFER_CLAN_OWNERSHIP_VALUE = 29;
    public static final int S_RETRIEVE_CLAN_INFO_EVENT_VALUE = 30;
    public static final int S_CHANGE_CLAN_SETTINGS_EVENT_VALUE = 31;
    public static final int S_BOOT_PLAYER_FROM_CLAN_EVENT_VALUE = 32;
    public static final int S_SUBMIT_MONSTER_ENHANCEMENT_EVENT_VALUE = 35;
    public static final int S_EVOLVE_MONSTER_EVENT_VALUE = 36;
    public static final int S_PURCHASE_BOOSTER_PACK_EVENT_VALUE = 37;
    public static final int S_EVOLUTION_FINISHED_EVENT_VALUE = 38;
    public static final int S_ACHIEVEMENT_PROGRESS_EVENT_VALUE = 39;
    public static final int S_PRIVATE_CHAT_POST_EVENT_VALUE = 40;
    public static final int S_BEGIN_DUNGEON_EVENT_VALUE = 43;
    public static final int S_END_DUNGEON_EVENT_VALUE = 44;
    public static final int S_REVIVE_IN_DUNGEON_EVENT_VALUE = 45;
    public static final int S_QUEUE_UP_EVENT_VALUE = 46;
    public static final int S_UPDATE_MONSTER_HEALTH_EVENT_VALUE = 47;
    public static final int S_HEAL_MONSTER_EVENT_VALUE = 48;
    public static final int S_ACHIEVEMENT_REDEEM_EVENT_VALUE = 49;
    public static final int S_ADD_MONSTER_TO_BATTLE_TEAM_EVENT_VALUE = 50;
    public static final int S_REMOVE_MONSTER_FROM_BATTLE_TEAM_EVENT_VALUE = 51;
    public static final int S_INCREASE_MONSTER_INVENTORY_SLOT_EVENT_VALUE = 52;
    public static final int S_ENHANCEMENT_WAIT_TIME_COMPLETE_EVENT_VALUE = 53;
    public static final int S_COMBINE_USER_MONSTER_PIECES_EVENT_VALUE = 54;
    public static final int S_SELL_USER_MONSTER_EVENT_VALUE = 55;
    public static final int S_INVITE_FB_FRIENDS_FOR_SLOTS_EVENT_VALUE = 56;
    public static final int S_ACCEPT_AND_REJECT_FB_INVITE_FOR_SLOTS_EVENT_VALUE = 57;
    public static final int S_UPDATE_USER_CURRENCY_EVENT_VALUE = 59;
    public static final int S_BEGIN_PVP_BATTLE_EVENT_VALUE = 60;
    public static final int S_END_PVP_BATTLE_EVENT_VALUE = 61;
    public static final int S_BEGIN_CLAN_RAID_EVENT_VALUE = 62;
    public static final int S_ATTACK_CLAN_RAID_MONSTER_EVENT_VALUE = 63;
    public static final int S_RECORD_CLAN_RAID_STATS_EVENT_VALUE = 64;
    public static final int S_PROMOTE_DEMOTE_CLAN_MEMBER_EVENT_VALUE = 65;
    public static final int S_SET_GAME_CENTER_ID_EVENT_VALUE = 66;
    public static final int S_SPAWN_OBSTACLE_EVENT_VALUE = 67;
    public static final int S_BEGIN_OBSTACLE_REMOVAL_EVENT_VALUE = 68;
    public static final int S_OBSTACLE_REMOVAL_COMPLETE_EVENT_VALUE = 69;
    public static final int S_SPAWN_MINI_JOB_EVENT_VALUE = 70;
    public static final int S_BEGIN_MINI_JOB_EVENT_VALUE = 71;
    public static final int S_COMPLETE_MINI_JOB_EVENT_VALUE = 72;
    public static final int S_REDEEM_MINI_JOB_EVENT_VALUE = 73;
    public static final int S_UPDATE_CLIENT_USER_EVENT_VALUE = 101;
    public static final int S_REFERRAL_CODE_USED_EVENT_VALUE = 102;
    public static final int S_PURGE_STATIC_DATA_EVENT_VALUE = 103;
    public static final int S_RECEIVED_GROUP_CHAT_EVENT_VALUE = 104;
    public static final int S_SEND_ADMIN_MESSAGE_EVENT_VALUE = 105;
    public static final int S_GENERAL_NOTIFICATION_EVENT_VALUE = 106;
    public static final int S_RECEIVED_RARE_BOOSTER_PURCHASE_EVENT_VALUE = 107;
    public static final int S_AWARD_CLAN_RAID_STAGE_REWARD_EVENT_VALUE = 108;
    public static final int S_FORCE_LOGOUT_EVENT_VALUE = 109;
    
    
    public final int getNumber() { return value; }
    
    public static EventProtocolResponse valueOf(int value) {
      switch (value) {
        case 1: return S_STARTUP_EVENT;
        case 2: return S_IN_APP_PURCHASE_EVENT;
        case 3: return S_PURCHASE_NORM_STRUCTURE_EVENT;
        case 4: return S_MOVE_OR_ROTATE_NORM_STRUCTURE_EVENT;
        case 5: return S_SET_FACEBOOK_ID_EVENT;
        case 6: return S_UPGRADE_NORM_STRUCTURE_EVENT;
        case 7: return S_RETRIEVE_CURRENCY_FROM_NORM_STRUCTURE_EVENT;
        case 8: return S_FINISH_NORM_STRUCT_WAITTIME_WITH_DIAMONDS_EVENT;
        case 9: return S_NORM_STRUCT_WAIT_COMPLETE_EVENT;
        case 10: return S_LOAD_PLAYER_CITY_EVENT;
        case 11: return S_EXCHANGE_GEMS_FOR_RESOURCES_EVENT;
        case 12: return S_QUEST_ACCEPT_EVENT;
        case 13: return S_QUEST_PROGRESS_EVENT;
        case 14: return S_QUEST_REDEEM_EVENT;
        case 15: return S_PURCHASE_CITY_EXPANSION_EVENT;
        case 17: return S_LEVEL_UP_EVENT;
        case 18: return S_ENABLE_APNS_EVENT;
        case 19: return S_USER_CREATE_EVENT;
        case 20: return S_LOAD_CITY_EVENT;
        case 22: return S_EARN_FREE_DIAMONDS_EVENT;
        case 23: return S_SEND_GROUP_CHAT_EVENT;
        case 24: return S_CREATE_CLAN_EVENT;
        case 25: return S_LEAVE_CLAN_EVENT;
        case 26: return S_REQUEST_JOIN_CLAN_EVENT;
        case 27: return S_RETRACT_REQUEST_JOIN_CLAN_EVENT;
        case 28: return S_APPROVE_OR_REJECT_REQUEST_TO_JOIN_CLAN_EVENT;
        case 29: return S_TRANSFER_CLAN_OWNERSHIP;
        case 30: return S_RETRIEVE_CLAN_INFO_EVENT;
        case 31: return S_CHANGE_CLAN_SETTINGS_EVENT;
        case 32: return S_BOOT_PLAYER_FROM_CLAN_EVENT;
        case 35: return S_SUBMIT_MONSTER_ENHANCEMENT_EVENT;
        case 36: return S_EVOLVE_MONSTER_EVENT;
        case 37: return S_PURCHASE_BOOSTER_PACK_EVENT;
        case 38: return S_EVOLUTION_FINISHED_EVENT;
        case 39: return S_ACHIEVEMENT_PROGRESS_EVENT;
        case 40: return S_PRIVATE_CHAT_POST_EVENT;
        case 43: return S_BEGIN_DUNGEON_EVENT;
        case 44: return S_END_DUNGEON_EVENT;
        case 45: return S_REVIVE_IN_DUNGEON_EVENT;
        case 46: return S_QUEUE_UP_EVENT;
        case 47: return S_UPDATE_MONSTER_HEALTH_EVENT;
        case 48: return S_HEAL_MONSTER_EVENT;
        case 49: return S_ACHIEVEMENT_REDEEM_EVENT;
        case 50: return S_ADD_MONSTER_TO_BATTLE_TEAM_EVENT;
        case 51: return S_REMOVE_MONSTER_FROM_BATTLE_TEAM_EVENT;
        case 52: return S_INCREASE_MONSTER_INVENTORY_SLOT_EVENT;
        case 53: return S_ENHANCEMENT_WAIT_TIME_COMPLETE_EVENT;
        case 54: return S_COMBINE_USER_MONSTER_PIECES_EVENT;
        case 55: return S_SELL_USER_MONSTER_EVENT;
        case 56: return S_INVITE_FB_FRIENDS_FOR_SLOTS_EVENT;
        case 57: return S_ACCEPT_AND_REJECT_FB_INVITE_FOR_SLOTS_EVENT;
        case 59: return S_UPDATE_USER_CURRENCY_EVENT;
        case 60: return S_BEGIN_PVP_BATTLE_EVENT;
        case 61: return S_END_PVP_BATTLE_EVENT;
        case 62: return S_BEGIN_CLAN_RAID_EVENT;
        case 63: return S_ATTACK_CLAN_RAID_MONSTER_EVENT;
        case 64: return S_RECORD_CLAN_RAID_STATS_EVENT;
        case 65: return S_PROMOTE_DEMOTE_CLAN_MEMBER_EVENT;
        case 66: return S_SET_GAME_CENTER_ID_EVENT;
        case 67: return S_SPAWN_OBSTACLE_EVENT;
        case 68: return S_BEGIN_OBSTACLE_REMOVAL_EVENT;
        case 69: return S_OBSTACLE_REMOVAL_COMPLETE_EVENT;
        case 70: return S_SPAWN_MINI_JOB_EVENT;
        case 71: return S_BEGIN_MINI_JOB_EVENT;
        case 72: return S_COMPLETE_MINI_JOB_EVENT;
        case 73: return S_REDEEM_MINI_JOB_EVENT;
        case 101: return S_UPDATE_CLIENT_USER_EVENT;
        case 102: return S_REFERRAL_CODE_USED_EVENT;
        case 103: return S_PURGE_STATIC_DATA_EVENT;
        case 104: return S_RECEIVED_GROUP_CHAT_EVENT;
        case 105: return S_SEND_ADMIN_MESSAGE_EVENT;
        case 106: return S_GENERAL_NOTIFICATION_EVENT;
        case 107: return S_RECEIVED_RARE_BOOSTER_PURCHASE_EVENT;
        case 108: return S_AWARD_CLAN_RAID_STAGE_REWARD_EVENT;
        case 109: return S_FORCE_LOGOUT_EVENT;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<EventProtocolResponse>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EventProtocolResponse>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EventProtocolResponse>() {
            public EventProtocolResponse findValueByNumber(int number) {
              return EventProtocolResponse.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.lvl6.mobsters.noneventproto.ConfigEventProtocolProto.getDescriptor().getEnumTypes().get(1);
    }
    
    private static final EventProtocolResponse[] VALUES = {
      S_STARTUP_EVENT, S_IN_APP_PURCHASE_EVENT, S_PURCHASE_NORM_STRUCTURE_EVENT, S_MOVE_OR_ROTATE_NORM_STRUCTURE_EVENT, S_SET_FACEBOOK_ID_EVENT, S_UPGRADE_NORM_STRUCTURE_EVENT, S_RETRIEVE_CURRENCY_FROM_NORM_STRUCTURE_EVENT, S_FINISH_NORM_STRUCT_WAITTIME_WITH_DIAMONDS_EVENT, S_NORM_STRUCT_WAIT_COMPLETE_EVENT, S_LOAD_PLAYER_CITY_EVENT, S_EXCHANGE_GEMS_FOR_RESOURCES_EVENT, S_QUEST_ACCEPT_EVENT, S_QUEST_PROGRESS_EVENT, S_QUEST_REDEEM_EVENT, S_PURCHASE_CITY_EXPANSION_EVENT, S_LEVEL_UP_EVENT, S_ENABLE_APNS_EVENT, S_USER_CREATE_EVENT, S_LOAD_CITY_EVENT, S_EARN_FREE_DIAMONDS_EVENT, S_SEND_GROUP_CHAT_EVENT, S_CREATE_CLAN_EVENT, S_LEAVE_CLAN_EVENT, S_REQUEST_JOIN_CLAN_EVENT, S_RETRACT_REQUEST_JOIN_CLAN_EVENT, S_APPROVE_OR_REJECT_REQUEST_TO_JOIN_CLAN_EVENT, S_TRANSFER_CLAN_OWNERSHIP, S_RETRIEVE_CLAN_INFO_EVENT, S_CHANGE_CLAN_SETTINGS_EVENT, S_BOOT_PLAYER_FROM_CLAN_EVENT, S_SUBMIT_MONSTER_ENHANCEMENT_EVENT, S_EVOLVE_MONSTER_EVENT, S_PURCHASE_BOOSTER_PACK_EVENT, S_EVOLUTION_FINISHED_EVENT, S_ACHIEVEMENT_PROGRESS_EVENT, S_PRIVATE_CHAT_POST_EVENT, S_BEGIN_DUNGEON_EVENT, S_END_DUNGEON_EVENT, S_REVIVE_IN_DUNGEON_EVENT, S_QUEUE_UP_EVENT, S_UPDATE_MONSTER_HEALTH_EVENT, S_HEAL_MONSTER_EVENT, S_ACHIEVEMENT_REDEEM_EVENT, S_ADD_MONSTER_TO_BATTLE_TEAM_EVENT, S_REMOVE_MONSTER_FROM_BATTLE_TEAM_EVENT, S_INCREASE_MONSTER_INVENTORY_SLOT_EVENT, S_ENHANCEMENT_WAIT_TIME_COMPLETE_EVENT, S_COMBINE_USER_MONSTER_PIECES_EVENT, S_SELL_USER_MONSTER_EVENT, S_INVITE_FB_FRIENDS_FOR_SLOTS_EVENT, S_ACCEPT_AND_REJECT_FB_INVITE_FOR_SLOTS_EVENT, S_UPDATE_USER_CURRENCY_EVENT, S_BEGIN_PVP_BATTLE_EVENT, S_END_PVP_BATTLE_EVENT, S_BEGIN_CLAN_RAID_EVENT, S_ATTACK_CLAN_RAID_MONSTER_EVENT, S_RECORD_CLAN_RAID_STATS_EVENT, S_PROMOTE_DEMOTE_CLAN_MEMBER_EVENT, S_SET_GAME_CENTER_ID_EVENT, S_SPAWN_OBSTACLE_EVENT, S_BEGIN_OBSTACLE_REMOVAL_EVENT, S_OBSTACLE_REMOVAL_COMPLETE_EVENT, S_SPAWN_MINI_JOB_EVENT, S_BEGIN_MINI_JOB_EVENT, S_COMPLETE_MINI_JOB_EVENT, S_REDEEM_MINI_JOB_EVENT, S_UPDATE_CLIENT_USER_EVENT, S_REFERRAL_CODE_USED_EVENT, S_PURGE_STATIC_DATA_EVENT, S_RECEIVED_GROUP_CHAT_EVENT, S_SEND_ADMIN_MESSAGE_EVENT, S_GENERAL_NOTIFICATION_EVENT, S_RECEIVED_RARE_BOOSTER_PURCHASE_EVENT, S_AWARD_CLAN_RAID_STAGE_REWARD_EVENT, S_FORCE_LOGOUT_EVENT, 
    };
    
    public static EventProtocolResponse valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private EventProtocolResponse(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:proto.EventProtocolResponse)
  }
  
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\031ConfigEventProtocol.proto\022\005proto\032\036Conf" +
      "igNoneventSharedEnum.proto\032\026EventAchieve" +
      "ment.proto\032\017EventApns.proto\032\026EventBooste" +
      "rPack.proto\032\017EventChat.proto\032\017EventCity." +
      "proto\032\017EventClan.proto\032\022EventDungeon.pro" +
      "to\032\030EventInAppPurchase.proto\032\022EventMiniJ" +
      "ob.proto\032\022EventMonster.proto\032\016EventPvp.p" +
      "roto\032\020EventQuest.proto\032\022EventStartup.pro" +
      "to\032\025EventStaticData.proto\032\024EventStructur" +
      "e.proto\032\017EventUser.proto\032\031NoneventAchiev",
      "ement.proto\032\031NoneventBoosterPack.proto\032\022" +
      "NoneventChat.proto\032\022NoneventCity.proto\032\022" +
      "NoneventClan.proto\032\033NoneventInAppPurchas" +
      "e.proto\032\025NoneventMiniJob.proto\032\025Nonevent" +
      "Monster.proto\032\021NoneventPvp.proto\032\023Noneve" +
      "ntQuest.proto\032\030NoneventStaticData.proto\032" +
      "\027NoneventStructure.proto\032\022NoneventTask.p" +
      "roto\032\022NoneventUser.proto*\313\021\n\024EventProtoc" +
      "olRequest\022\023\n\017C_STARTUP_EVENT\020\001\022\033\n\027C_IN_A" +
      "PP_PURCHASE_EVENT\020\002\022#\n\037C_PURCHASE_NORM_S",
      "TRUCTURE_EVENT\020\003\022)\n%C_MOVE_OR_ROTATE_NOR" +
      "M_STRUCTURE_EVENT\020\004\022\033\n\027C_SET_FACEBOOK_ID" +
      "_EVENT\020\005\022\"\n\036C_UPGRADE_NORM_STRUCTURE_EVE" +
      "NT\020\006\0221\n-C_RETRIEVE_CURRENCY_FROM_NORM_ST" +
      "RUCTURE_EVENT\020\007\0225\n1C_FINISH_NORM_STRUCT_" +
      "WAITTIME_WITH_DIAMONDS_EVENT\020\010\022%\n!C_NORM" +
      "_STRUCT_WAIT_COMPLETE_EVENT\020\t\022\034\n\030C_LOAD_" +
      "PLAYER_CITY_EVENT\020\n\022\'\n#C_EXCHANGE_GEMS_F" +
      "OR_RESOURCES_EVENT\020\013\022\030\n\024C_QUEST_ACCEPT_E" +
      "VENT\020\014\022\032\n\026C_QUEST_PROGRESS_EVENT\020\r\022\030\n\024C_",
      "QUEST_REDEEM_EVENT\020\016\022#\n\037C_PURCHASE_CITY_" +
      "EXPANSION_EVENT\020\017\022\024\n\020C_LEVEL_UP_EVENT\020\021\022" +
      "\027\n\023C_ENABLE_APNS_EVENT\020\022\022\027\n\023C_USER_CREAT" +
      "E_EVENT\020\023\022\025\n\021C_LOAD_CITY_EVENT\020\024\022\036\n\032C_EA" +
      "RN_FREE_DIAMONDS_EVENT\020\026\022\033\n\027C_SEND_GROUP" +
      "_CHAT_EVENT\020\027\022\027\n\023C_CREATE_CLAN_EVENT\020\030\022\026" +
      "\n\022C_LEAVE_CLAN_EVENT\020\031\022\035\n\031C_REQUEST_JOIN" +
      "_CLAN_EVENT\020\032\022%\n!C_RETRACT_REQUEST_JOIN_" +
      "CLAN_EVENT\020\033\0222\n.C_APPROVE_OR_REJECT_REQU" +
      "EST_TO_JOIN_CLAN_EVENT\020\034\022\035\n\031C_TRANSFER_C",
      "LAN_OWNERSHIP\020\035\022\036\n\032C_RETRIEVE_CLAN_INFO_" +
      "EVENT\020\036\022 \n\034C_CHANGE_CLAN_SETTINGS_EVENT\020" +
      "\037\022!\n\035C_BOOT_PLAYER_FROM_CLAN_EVENT\020 \022&\n\"" +
      "C_SUBMIT_MONSTER_ENHANCEMENT_EVENT\020#\022\032\n\026" +
      "C_EVOLVE_MONSTER_EVENT\020$\022!\n\035C_PURCHASE_B" +
      "OOSTER_PACK_EVENT\020%\022\036\n\032C_EVOLUTION_FINIS" +
      "HED_EVENT\020&\022 \n\034C_ACHIEVEMENT_PROGRESS_EV" +
      "ENT\020\'\022\035\n\031C_PRIVATE_CHAT_POST_EVENT\020(\022\031\n\025" +
      "C_BEGIN_DUNGEON_EVENT\020+\022\027\n\023C_END_DUNGEON" +
      "_EVENT\020,\022\035\n\031C_REVIVE_IN_DUNGEON_EVENT\020-\022",
      "\024\n\020C_QUEUE_UP_EVENT\020.\022!\n\035C_UPDATE_MONSTE" +
      "R_HEALTH_EVENT\020/\022\030\n\024C_HEAL_MONSTER_EVENT" +
      "\0200\022\036\n\032C_ACHIEVEMENT_REDEEM_EVENT\0201\022&\n\"C_" +
      "ADD_MONSTER_TO_BATTLE_TEAM_EVENT\0202\022+\n\'C_" +
      "REMOVE_MONSTER_FROM_BATTLE_TEAM_EVENT\0203\022" +
      "+\n\'C_INCREASE_MONSTER_INVENTORY_SLOT_EVE" +
      "NT\0204\022*\n&C_ENHANCEMENT_WAIT_TIME_COMPLETE" +
      "_EVENT\0205\022\'\n#C_COMBINE_USER_MONSTER_PIECE" +
      "S_EVENT\0206\022\035\n\031C_SELL_USER_MONSTER_EVENT\0207" +
      "\022\'\n#C_INVITE_FB_FRIENDS_FOR_SLOTS_EVENT\020",
      "8\0221\n-C_ACCEPT_AND_REJECT_FB_INVITE_FOR_S" +
      "LOTS_EVENT\0209\022 \n\034C_UPDATE_USER_CURRENCY_E" +
      "VENT\020;\022\034\n\030C_BEGIN_PVP_BATTLE_EVENT\020<\022\032\n\026" +
      "C_END_PVP_BATTLE_EVENT\020=\022\033\n\027C_BEGIN_CLAN" +
      "_RAID_EVENT\020>\022$\n C_ATTACK_CLAN_RAID_MONS" +
      "TER_EVENT\020?\022\"\n\036C_RECORD_CLAN_RAID_STATS_" +
      "EVENT\020@\022&\n\"C_PROMOTE_DEMOTE_CLAN_MEMBER_" +
      "EVENT\020A\022\036\n\032C_SET_GAME_CENTER_ID_EVENT\020B\022" +
      "\032\n\026C_SPAWN_OBSTACLE_EVENT\020C\022\"\n\036C_BEGIN_O" +
      "BSTACLE_REMOVAL_EVENT\020D\022%\n!C_OBSTACLE_RE",
      "MOVAL_COMPLETE_EVENT\020E\022\032\n\026C_SPAWN_MINI_J" +
      "OB_EVENT\020F\022\032\n\026C_BEGIN_MINI_JOB_EVENT\020G\022\035" +
      "\n\031C_COMPLETE_MINI_JOB_EVENT\020H\022\033\n\027C_REDEE" +
      "M_MINI_JOB_EVENT\020I\022\022\n\016C_LOGOUT_EVENT\020e*\352" +
      "\023\n\025EventProtocolResponse\022\023\n\017S_STARTUP_EV" +
      "ENT\020\001\022\033\n\027S_IN_APP_PURCHASE_EVENT\020\002\022#\n\037S_" +
      "PURCHASE_NORM_STRUCTURE_EVENT\020\003\022)\n%S_MOV" +
      "E_OR_ROTATE_NORM_STRUCTURE_EVENT\020\004\022\033\n\027S_" +
      "SET_FACEBOOK_ID_EVENT\020\005\022\"\n\036S_UPGRADE_NOR" +
      "M_STRUCTURE_EVENT\020\006\0221\n-S_RETRIEVE_CURREN",
      "CY_FROM_NORM_STRUCTURE_EVENT\020\007\0225\n1S_FINI" +
      "SH_NORM_STRUCT_WAITTIME_WITH_DIAMONDS_EV" +
      "ENT\020\010\022%\n!S_NORM_STRUCT_WAIT_COMPLETE_EVE" +
      "NT\020\t\022\034\n\030S_LOAD_PLAYER_CITY_EVENT\020\n\022\'\n#S_" +
      "EXCHANGE_GEMS_FOR_RESOURCES_EVENT\020\013\022\030\n\024S" +
      "_QUEST_ACCEPT_EVENT\020\014\022\032\n\026S_QUEST_PROGRES" +
      "S_EVENT\020\r\022\030\n\024S_QUEST_REDEEM_EVENT\020\016\022#\n\037S" +
      "_PURCHASE_CITY_EXPANSION_EVENT\020\017\022\024\n\020S_LE" +
      "VEL_UP_EVENT\020\021\022\027\n\023S_ENABLE_APNS_EVENT\020\022\022" +
      "\027\n\023S_USER_CREATE_EVENT\020\023\022\025\n\021S_LOAD_CITY_",
      "EVENT\020\024\022\036\n\032S_EARN_FREE_DIAMONDS_EVENT\020\026\022" +
      "\033\n\027S_SEND_GROUP_CHAT_EVENT\020\027\022\027\n\023S_CREATE" +
      "_CLAN_EVENT\020\030\022\026\n\022S_LEAVE_CLAN_EVENT\020\031\022\035\n" +
      "\031S_REQUEST_JOIN_CLAN_EVENT\020\032\022%\n!S_RETRAC" +
      "T_REQUEST_JOIN_CLAN_EVENT\020\033\0222\n.S_APPROVE" +
      "_OR_REJECT_REQUEST_TO_JOIN_CLAN_EVENT\020\034\022" +
      "\035\n\031S_TRANSFER_CLAN_OWNERSHIP\020\035\022\036\n\032S_RETR" +
      "IEVE_CLAN_INFO_EVENT\020\036\022 \n\034S_CHANGE_CLAN_" +
      "SETTINGS_EVENT\020\037\022!\n\035S_BOOT_PLAYER_FROM_C" +
      "LAN_EVENT\020 \022&\n\"S_SUBMIT_MONSTER_ENHANCEM",
      "ENT_EVENT\020#\022\032\n\026S_EVOLVE_MONSTER_EVENT\020$\022" +
      "!\n\035S_PURCHASE_BOOSTER_PACK_EVENT\020%\022\036\n\032S_" +
      "EVOLUTION_FINISHED_EVENT\020&\022 \n\034S_ACHIEVEM" +
      "ENT_PROGRESS_EVENT\020\'\022\035\n\031S_PRIVATE_CHAT_P" +
      "OST_EVENT\020(\022\031\n\025S_BEGIN_DUNGEON_EVENT\020+\022\027" +
      "\n\023S_END_DUNGEON_EVENT\020,\022\035\n\031S_REVIVE_IN_D" +
      "UNGEON_EVENT\020-\022\024\n\020S_QUEUE_UP_EVENT\020.\022!\n\035" +
      "S_UPDATE_MONSTER_HEALTH_EVENT\020/\022\030\n\024S_HEA" +
      "L_MONSTER_EVENT\0200\022\036\n\032S_ACHIEVEMENT_REDEE" +
      "M_EVENT\0201\022&\n\"S_ADD_MONSTER_TO_BATTLE_TEA",
      "M_EVENT\0202\022+\n\'S_REMOVE_MONSTER_FROM_BATTL" +
      "E_TEAM_EVENT\0203\022+\n\'S_INCREASE_MONSTER_INV" +
      "ENTORY_SLOT_EVENT\0204\022*\n&S_ENHANCEMENT_WAI" +
      "T_TIME_COMPLETE_EVENT\0205\022\'\n#S_COMBINE_USE" +
      "R_MONSTER_PIECES_EVENT\0206\022\035\n\031S_SELL_USER_" +
      "MONSTER_EVENT\0207\022\'\n#S_INVITE_FB_FRIENDS_F" +
      "OR_SLOTS_EVENT\0208\0221\n-S_ACCEPT_AND_REJECT_" +
      "FB_INVITE_FOR_SLOTS_EVENT\0209\022 \n\034S_UPDATE_" +
      "USER_CURRENCY_EVENT\020;\022\034\n\030S_BEGIN_PVP_BAT" +
      "TLE_EVENT\020<\022\032\n\026S_END_PVP_BATTLE_EVENT\020=\022",
      "\033\n\027S_BEGIN_CLAN_RAID_EVENT\020>\022$\n S_ATTACK" +
      "_CLAN_RAID_MONSTER_EVENT\020?\022\"\n\036S_RECORD_C" +
      "LAN_RAID_STATS_EVENT\020@\022&\n\"S_PROMOTE_DEMO" +
      "TE_CLAN_MEMBER_EVENT\020A\022\036\n\032S_SET_GAME_CEN" +
      "TER_ID_EVENT\020B\022\032\n\026S_SPAWN_OBSTACLE_EVENT" +
      "\020C\022\"\n\036S_BEGIN_OBSTACLE_REMOVAL_EVENT\020D\022%" +
      "\n!S_OBSTACLE_REMOVAL_COMPLETE_EVENT\020E\022\032\n" +
      "\026S_SPAWN_MINI_JOB_EVENT\020F\022\032\n\026S_BEGIN_MIN" +
      "I_JOB_EVENT\020G\022\035\n\031S_COMPLETE_MINI_JOB_EVE" +
      "NT\020H\022\033\n\027S_REDEEM_MINI_JOB_EVENT\020I\022\036\n\032S_U",
      "PDATE_CLIENT_USER_EVENT\020e\022\036\n\032S_REFERRAL_" +
      "CODE_USED_EVENT\020f\022\035\n\031S_PURGE_STATIC_DATA" +
      "_EVENT\020g\022\037\n\033S_RECEIVED_GROUP_CHAT_EVENT\020" +
      "h\022\036\n\032S_SEND_ADMIN_MESSAGE_EVENT\020i\022 \n\034S_G" +
      "ENERAL_NOTIFICATION_EVENT\020j\022*\n&S_RECEIVE" +
      "D_RARE_BOOSTER_PURCHASE_EVENT\020k\022(\n$S_AWA" +
      "RD_CLAN_RAID_STAGE_REWARD_EVENT\020l\022\030\n\024S_F" +
      "ORCE_LOGOUT_EVENT\020mB;\n\037com.lvl6.mobsters" +
      ".noneventprotoB\030ConfigEventProtocolProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.lvl6.mobsters.noneventproto.ConfigNoneventSharedEnumProto.getDescriptor(),
          com.lvl6.mobsters.eventproto.EventAchievementProto.getDescriptor(),
          com.lvl6.mobsters.eventproto.EventApnsProto.getDescriptor(),
          com.lvl6.mobsters.eventproto.EventBoosterPackProto.getDescriptor(),
          com.lvl6.mobsters.eventproto.EventChatProto.getDescriptor(),
          com.lvl6.mobsters.eventproto.EventCityProto.getDescriptor(),
          com.lvl6.mobsters.eventproto.EventClanProto.getDescriptor(),
          com.lvl6.mobsters.eventproto.EventDungeonProto.getDescriptor(),
          com.lvl6.mobsters.eventproto.EventInAppPurchaseProto.getDescriptor(),
          com.lvl6.mobsters.eventproto.EventMiniJobProto.getDescriptor(),
          com.lvl6.mobsters.eventproto.EventMonsterProto.getDescriptor(),
          com.lvl6.mobsters.eventproto.EventPvpProto.getDescriptor(),
          com.lvl6.mobsters.eventproto.EventQuestProto.getDescriptor(),
          com.lvl6.mobsters.eventproto.EventStartupProto.getDescriptor(),
          com.lvl6.mobsters.eventproto.EventStaticDataProto.getDescriptor(),
          com.lvl6.mobsters.eventproto.EventStructureProto.getDescriptor(),
          com.lvl6.mobsters.eventproto.EventUserProto.getDescriptor(),
          com.lvl6.mobsters.noneventproto.NoneventAchievementProto.getDescriptor(),
          com.lvl6.mobsters.noneventproto.NoneventBoosterPackProto.getDescriptor(),
          com.lvl6.mobsters.noneventproto.NoneventChatProto.getDescriptor(),
          com.lvl6.mobsters.noneventproto.NoneventCityProto.getDescriptor(),
          com.lvl6.mobsters.noneventproto.NoneventClanProto.getDescriptor(),
          com.lvl6.mobsters.noneventproto.NoneventInAppPurchaseProto.getDescriptor(),
          com.lvl6.mobsters.noneventproto.NoneventMiniJobProto.getDescriptor(),
          com.lvl6.mobsters.noneventproto.NoneventMonsterProto.getDescriptor(),
          com.lvl6.mobsters.noneventproto.NoneventPvpProto.getDescriptor(),
          com.lvl6.mobsters.noneventproto.NoneventQuestProto.getDescriptor(),
          com.lvl6.mobsters.noneventproto.NoneventStaticDataProto.getDescriptor(),
          com.lvl6.mobsters.noneventproto.NoneventStructureProto.getDescriptor(),
          com.lvl6.mobsters.noneventproto.NoneventTaskProto.getDescriptor(),
          com.lvl6.mobsters.noneventproto.NoneventUserProto.getDescriptor(),
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
